(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{JMQW:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return d})),o.d(t,"default",(function(){return r}));o("5hJT"),o("W1QL"),o("K/PF"),o("t91x"),o("75LO"),o("PJhk");var c=o("mXGw"),n=o("/FXl"),a=o("TjRS"),i=o("ZFoC"),s=o("yLlt");o("aD51");function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var c in o)Object.prototype.hasOwnProperty.call(o,c)&&(e[c]=o[c])}return e}).apply(this,arguments)}var d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Checkbox/readme.mdx"}});var l={_frontmatter:d},h=a.a;function r(e){var t,o,r,x,k=e.components,m=function(e,t){if(null==e)return{};var o,c,n={},a=Object.keys(e);for(c=0;c<a.length;c++)o=a[c],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,["components"]);return Object(n.b)(h,b({},l,m,{components:k,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"checkbox"},"Checkbox"),Object(n.b)("h2",{id:"basic-usage"},"Basic usage"),Object(n.b)("pre",null,Object(n.b)("code",b({parentName:"pre"},{className:"language-tsx"}),"import { Checkbox } from '@fxtrot/edge';\n")),Object(n.b)(i.c,{__position:0,__code:'() => {\n  const [checked, setChecked] = React.useState(false)\n  return (\n    <Checkbox\n      label="Subscribe to news"\n      checked={checked}\n      onChange={e => setChecked(e.target.checked)}\n      message="This is the message"\n    />\n  )\n}',__scope:(t={props:m,DefaultLayout:a.a,Playground:i.c,Box:s.Box,Checkbox:s.Checkbox,Stack:s.Stack,Text:s.Text},t.DefaultLayout=a.a,t._frontmatter=d,t),mdxType:"Playground"},(function(){var e=c.useState(!1),t=e[0],o=e[1];return Object(n.b)(s.Checkbox,{label:"Subscribe to news",checked:t,onChange:function(e){return o(e.target.checked)},message:"This is the message",mdxType:"Checkbox"})})),Object(n.b)("h2",{id:"tone"},"Tone"),Object(n.b)(i.c,{__position:1,__code:'<Box\n  display="grid"\n  gridAutoRows="auto"\n  gridTemplateColumns="repeat(4, 1fr)"\n  gridGap="s"\n>\n  <Checkbox label="No tone" message="Normal tone" />\n  <Checkbox label="No tone checked" message="Normal tone checked" checked />\n  <Checkbox label="No tone" message="Normal tone disabled" disabled />\n  <Checkbox\n    label="No tone checked"\n    checked\n    message="Normal tone checked disabled"\n    checked\n    disabled\n  />\n\n  <Checkbox label="Positive tone" message="Positive tone" tone="positive" />\n  <Checkbox\n    label="Positive tone"\n    message="Positive tone checked"\n    tone="positive"\n    checked\n  />\n  <Checkbox\n    label="Positive tone"\n    message="Positive tone disabled"\n    tone="positive"\n    disabled\n  />\n  <Checkbox\n    label="Positive tone"\n    message="Positive tone checked disabled"\n    checked\n    disabled\n    tone="positive"\n  />\n\n  <Checkbox label="Critical tone" message="Critical tone" tone="critical" />\n  <Checkbox\n    label="Critical tone"\n    message="Critical tone checked"\n    tone="critical"\n    checked\n  />\n  <Checkbox\n    label="Critical tone"\n    message="Critical tone disabled"\n    tone="critical"\n    disabled\n  />\n  <Checkbox\n    label="Critical tone"\n    message="Critical tone checked disabled"\n    tone="critical"\n    checked\n    disabled\n  />\n</Box>',__scope:(o={props:m,DefaultLayout:a.a,Playground:i.c,Box:s.Box,Checkbox:s.Checkbox,Stack:s.Stack,Text:s.Text},o.DefaultLayout=a.a,o._frontmatter=d,o),mdxType:"Playground"},Object(n.b)(s.Box,{display:"grid",gridAutoRows:"auto",gridTemplateColumns:"repeat(4, 1fr)",gridGap:"s",mdxType:"Box"},Object(n.b)(s.Checkbox,{label:"No tone",message:"Normal tone",mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"No tone checked",message:"Normal tone checked",checked:!0,mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"No tone",message:"Normal tone disabled",disabled:!0,mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,((r={label:"No tone checked",checked:!0,message:"Normal tone checked disabled"}).checked=!0,r.disabled=!0,r.mdxType="Checkbox",r)),Object(n.b)(s.Checkbox,{label:"Positive tone",message:"Positive tone",tone:"positive",mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Positive tone",message:"Positive tone checked",tone:"positive",checked:!0,mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Positive tone",message:"Positive tone disabled",tone:"positive",disabled:!0,mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Positive tone",message:"Positive tone checked disabled",checked:!0,disabled:!0,tone:"positive",mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Critical tone",message:"Critical tone",tone:"critical",mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Critical tone",message:"Critical tone checked",tone:"critical",checked:!0,mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Critical tone",message:"Critical tone disabled",tone:"critical",disabled:!0,mdxType:"Checkbox"}),Object(n.b)(s.Checkbox,{label:"Critical tone",message:"Critical tone checked disabled",tone:"critical",checked:!0,disabled:!0,mdxType:"Checkbox"}))),Object(n.b)("h2",{id:"checked-inner-text"},"Checked inner Text"),Object(n.b)(i.c,{__position:2,__code:'<Stack>\n  <Checkbox\n    label="With some additional text"\n    message="It is recommended to not use message with children text"\n    checked={false}\n  >\n    <Text>This text is shown when the Checkbox is checked</Text>\n  </Checkbox>\n  <Checkbox label="With some additional text" checked={true}>\n    <Text>This text is shown when the Checkbox is checked</Text>\n  </Checkbox>\n</Stack>',__scope:(x={props:m,DefaultLayout:a.a,Playground:i.c,Box:s.Box,Checkbox:s.Checkbox,Stack:s.Stack,Text:s.Text},x.DefaultLayout=a.a,x._frontmatter=d,x),mdxType:"Playground"},Object(n.b)(s.Stack,{mdxType:"Stack"},Object(n.b)(s.Checkbox,{label:"With some additional text",message:"It is recommended to not use message with children text",checked:!1,mdxType:"Checkbox"},Object(n.b)(s.Text,{mdxType:"Text"},"This text is shown when the Checkbox is checked")),Object(n.b)(s.Checkbox,{label:"With some additional text",checked:!0,mdxType:"Checkbox"},Object(n.b)(s.Text,{mdxType:"Text"},"This text is shown when the Checkbox is checked")))))}void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Checkbox/readme.mdx"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-checkbox-readme-mdx-5be0937de2fac3d0113f.js.map
{"version":3,"sources":["webpack:///../src/Checkbox/readme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Box","Checkbox","Stack","Text","React","checked","setChecked","label","onChange","e","target","message","display","gridAutoRows","gridTemplateColumns","gridGap","disabled","tone","isMDXComponent"],"mappings":"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","file":"component---src-checkbox-readme-mdx-5be0937de2fac3d0113f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/edge/edge/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Box, Checkbox, Stack, Text } from '@fxtrot/edge';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Checkbox } from '@fxtrot/edge';\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [checked, setChecked] = React.useState(false)\\n  return (\\n    <Checkbox\\n      label=\\\"Subscribe to news\\\"\\n      checked={checked}\\n      onChange={e => setChecked(e.target.checked)}\\n      message=\\\"This is the message\\\"\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Box,\n      Checkbox,\n      Stack,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [checked, setChecked] = React.useState(false);\n        return <Checkbox label=\"Subscribe to news\" checked={checked} onChange={e => setChecked(e.target.checked)} message=\"This is the message\" mdxType=\"Checkbox\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"tone\"\n    }}>{`Tone`}</h2>\n    <Playground __position={1} __code={'<Box\\n  display=\\\"grid\\\"\\n  gridAutoRows=\\\"auto\\\"\\n  gridTemplateColumns=\\\"repeat(4, 1fr)\\\"\\n  gridGap=\\\"s\\\"\\n>\\n  <Checkbox label=\\\"No tone\\\" message=\\\"Normal tone\\\" />\\n  <Checkbox label=\\\"No tone checked\\\" message=\\\"Normal tone checked\\\" checked />\\n  <Checkbox label=\\\"No tone\\\" message=\\\"Normal tone disabled\\\" disabled />\\n  <Checkbox\\n    label=\\\"No tone checked\\\"\\n    checked\\n    message=\\\"Normal tone checked disabled\\\"\\n    checked\\n    disabled\\n  />\\n\\n  <Checkbox label=\\\"Positive tone\\\" message=\\\"Positive tone\\\" tone=\\\"positive\\\" />\\n  <Checkbox\\n    label=\\\"Positive tone\\\"\\n    message=\\\"Positive tone checked\\\"\\n    tone=\\\"positive\\\"\\n    checked\\n  />\\n  <Checkbox\\n    label=\\\"Positive tone\\\"\\n    message=\\\"Positive tone disabled\\\"\\n    tone=\\\"positive\\\"\\n    disabled\\n  />\\n  <Checkbox\\n    label=\\\"Positive tone\\\"\\n    message=\\\"Positive tone checked disabled\\\"\\n    checked\\n    disabled\\n    tone=\\\"positive\\\"\\n  />\\n\\n  <Checkbox label=\\\"Critical tone\\\" message=\\\"Critical tone\\\" tone=\\\"critical\\\" />\\n  <Checkbox\\n    label=\\\"Critical tone\\\"\\n    message=\\\"Critical tone checked\\\"\\n    tone=\\\"critical\\\"\\n    checked\\n  />\\n  <Checkbox\\n    label=\\\"Critical tone\\\"\\n    message=\\\"Critical tone disabled\\\"\\n    tone=\\\"critical\\\"\\n    disabled\\n  />\\n  <Checkbox\\n    label=\\\"Critical tone\\\"\\n    message=\\\"Critical tone checked disabled\\\"\\n    tone=\\\"critical\\\"\\n    checked\\n    disabled\\n  />\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Box,\n      Checkbox,\n      Stack,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box display=\"grid\" gridAutoRows=\"auto\" gridTemplateColumns=\"repeat(4, 1fr)\" gridGap=\"s\" mdxType=\"Box\">\n        <Checkbox label=\"No tone\" message=\"Normal tone\" mdxType=\"Checkbox\" />\n        <Checkbox label=\"No tone checked\" message=\"Normal tone checked\" checked mdxType=\"Checkbox\" />\n        <Checkbox label=\"No tone\" message=\"Normal tone disabled\" disabled mdxType=\"Checkbox\" />\n        <Checkbox label=\"No tone checked\" checked message=\"Normal tone checked disabled\" checked disabled mdxType=\"Checkbox\" />\n\n        <Checkbox label=\"Positive tone\" message=\"Positive tone\" tone=\"positive\" mdxType=\"Checkbox\" />\n        <Checkbox label=\"Positive tone\" message=\"Positive tone checked\" tone=\"positive\" checked mdxType=\"Checkbox\" />\n        <Checkbox label=\"Positive tone\" message=\"Positive tone disabled\" tone=\"positive\" disabled mdxType=\"Checkbox\" />\n        <Checkbox label=\"Positive tone\" message=\"Positive tone checked disabled\" checked disabled tone=\"positive\" mdxType=\"Checkbox\" />\n\n        <Checkbox label=\"Critical tone\" message=\"Critical tone\" tone=\"critical\" mdxType=\"Checkbox\" />\n        <Checkbox label=\"Critical tone\" message=\"Critical tone checked\" tone=\"critical\" checked mdxType=\"Checkbox\" />\n        <Checkbox label=\"Critical tone\" message=\"Critical tone disabled\" tone=\"critical\" disabled mdxType=\"Checkbox\" />\n        <Checkbox label=\"Critical tone\" message=\"Critical tone checked disabled\" tone=\"critical\" checked disabled mdxType=\"Checkbox\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checked-inner-text\"\n    }}>{`Checked inner Text`}</h2>\n    <Playground __position={2} __code={'<Stack>\\n  <Checkbox\\n    label=\\\"With some additional text\\\"\\n    message=\\\"It is recommended to not use message with children text\\\"\\n    checked={false}\\n  >\\n    <Text>This text is shown when the Checkbox is checked</Text>\\n  </Checkbox>\\n  <Checkbox label=\\\"With some additional text\\\" checked={true}>\\n    <Text>This text is shown when the Checkbox is checked</Text>\\n  </Checkbox>\\n</Stack>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Box,\n      Checkbox,\n      Stack,\n      Text,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Stack mdxType=\"Stack\">\n    <Checkbox label=\"With some additional text\" message=\"It is recommended to not use message with children text\" checked={false} mdxType=\"Checkbox\">\n      <Text mdxType=\"Text\">This text is shown when the Checkbox is checked</Text>\n    </Checkbox>\n    <Checkbox label=\"With some additional text\" checked={true} mdxType=\"Checkbox\">\n      <Text mdxType=\"Text\">This text is shown when the Checkbox is checked</Text>\n    </Checkbox>\n  </Stack>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
{"version":3,"sources":["webpack:///../src/MenuButton/readme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","MenuButton","Button","ListBox","Option","Icon","size","icon","onSelect","alert","tone","placement","of","isMDXComponent"],"mappings":"mgBAQO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,wFACA,iCAAgB,sBAAQC,WAAW,KAAnB,WAAhB,6DAAyH,mBAAGA,WAAW,KAAQ,CAC3I,KAAQ,qBACP,0BAAYA,WAAW,KAAvB,YAFL,mBAEgF,mBAAGA,WAAW,KAAQ,CAClG,KAAQ,oBACP,0BAAYA,WAAW,KAAvB,WAJL,aAKA,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gFAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sWAAmXC,SAAO,GAC3ZL,QACAH,kBACAS,eACAC,UACAC,wBACAC,gBACAC,kBACAC,gBACAC,aAT2Z,gBAU3Zf,IAV2Z,EAW3ZH,eAX2Z,GAY1ZO,QAAQ,cACb,YAAC,aAAD,CAAYA,QAAQ,cAClB,YAAC,SAAD,CAAQY,KAAK,IAAIZ,QAAQ,UACvB,YAAC,OAAD,CAAMa,KAAK,aAAab,QAAQ,UAElC,YAAC,UAAD,CAASA,QAAQ,WACf,YAAC,SAAD,CAAQc,SAAU,kBAAMC,MAAM,SAASf,QAAQ,UAC7C,YAAC,OAAD,CAAMa,KAAK,OAAOG,KAAK,WAAWhB,QAAQ,SAD5C,QAIA,YAAC,SAAD,CAAQc,SAAU,kBAAMC,MAAM,WAAWf,QAAQ,UAC/C,YAAC,OAAD,CAAMa,KAAK,SAASG,KAAK,WAAWhB,QAAQ,SAD9C,cAMF,iBAAQ,CACN,GAAM,aADR,aAGA,6EAA4D,mBAAGC,WAAW,KAAQ,CAC9E,KAAQ,wDADgD,UAA5D,IAEwB,0BAAYA,WAAW,KAAvB,aAFxB,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iMAAsMC,SAAO,GAC9OL,QACAH,kBACAS,eACAC,UACAC,wBACAC,gBACAC,kBACAC,gBACAC,aAT8O,gBAU9Of,IAV8O,EAW9OH,eAX8O,GAY7OO,QAAQ,cACb,YAAC,aAAD,CAAYiB,UAAU,aAAajB,QAAQ,cACzC,YAAC,SAAD,CAAQgB,KAAK,QAAQhB,QAAQ,UAA7B,aACA,YAAC,UAAD,CAASA,QAAQ,WACf,YAAC,SAAD,CAAQA,QAAQ,UAAhB,oBACA,YAAC,SAAD,CAAQA,QAAQ,UAAhB,eAIF,iBAAQ,CACN,GAAM,kBADR,kBAGA,YAAC,IAAD,CAAOkB,GAAIX,aAAYP,QAAQ,gB,yMAKnCH,EAAWsB,gBAAiB","file":"component---src-menu-button-readme-mdx-b916f5a05c6610f8f1fe.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/edge/edge/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MenuButton, Button, ListBox, Option, Icon } from '@fxtrot/edge';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"menubutton\"\n    }}>{`MenuButton`}</h1>\n    <p>{`A component for the common dropdown menu button design pattern.`}</p>\n    <p>{`It takes `}<strong parentName=\"p\">{`exactly`}</strong>{` two children: button itself that serves as a trigger and `}<a parentName=\"p\" {...{\n        \"href\": \"/edge/fx-listbox\"\n      }}><inlineCode parentName=\"a\">{`ListBox`}</inlineCode></a>{` component with `}<a parentName=\"p\" {...{\n        \"href\": \"/edge/fx-option\"\n      }}><inlineCode parentName=\"a\">{`Option`}</inlineCode></a>{`s inside.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { MenuButton, Button, ListBox, Option, Icon } from '@fxtrot/edge';\n`}</code></pre>\n    <Playground __position={0} __code={'<MenuButton>\\n  <Button size=\\\"s\\\">\\n    <Icon icon=\\\"more_horiz\\\" />\\n  </Button>\\n  <ListBox>\\n    <Option onSelect={() => alert(\\'Edit\\')}>\\n      <Icon icon=\\\"edit\\\" tone=\\\"outlined\\\" />\\n      Edit\\n    </Option>\\n    <Option onSelect={() => alert(\\'Remove\\')}>\\n      <Icon icon=\\\"delete\\\" tone=\\\"outlined\\\" /> Remove\\n    </Option>\\n  </ListBox>\\n</MenuButton>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MenuButton,\n      Button,\n      ListBox,\n      Option,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MenuButton mdxType=\"MenuButton\">\n    <Button size=\"s\" mdxType=\"Button\">\n      <Icon icon=\"more_horiz\" mdxType=\"Icon\" />\n    </Button>\n    <ListBox mdxType=\"ListBox\">\n      <Option onSelect={() => alert('Edit')} mdxType=\"Option\">\n        <Icon icon=\"edit\" tone=\"outlined\" mdxType=\"Icon\" />\n        Edit\n      </Option>\n      <Option onSelect={() => alert('Remove')} mdxType=\"Option\">\n        <Icon icon=\"delete\" tone=\"outlined\" mdxType=\"Icon\" /> Remove\n      </Option>\n    </ListBox>\n  </MenuButton>\n    </Playground>\n    <h2 {...{\n      \"id\": \"placement\"\n    }}>{`Placement`}</h2>\n    <p>{`You can control the placement of the dropdown, using `}<a parentName=\"p\" {...{\n        \"href\": \"https://popper.js.org/docs/v2/constructors/#options\"\n      }}>{`popper`}</a>{` `}<inlineCode parentName=\"p\">{`placement`}</inlineCode>{` values.`}</p>\n    <Playground __position={1} __code={'<MenuButton placement=\\\"bottom-end\\\">\\n  <Button tone=\\\"brand\\\">Show menu</Button>\\n  <ListBox>\\n    <Option>Perform action 1</Option>\\n    <Option>Option 2</Option>\\n  </ListBox>\\n</MenuButton>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MenuButton,\n      Button,\n      ListBox,\n      Option,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MenuButton placement=\"bottom-end\" mdxType=\"MenuButton\">\n    <Button tone=\"brand\" mdxType=\"Button\">Show menu</Button>\n    <ListBox mdxType=\"ListBox\">\n      <Option mdxType=\"Option\">Perform action 1</Option>\n      <Option mdxType=\"Option\">Option 2</Option>\n    </ListBox>\n  </MenuButton>\n    </Playground>\n    <h2 {...{\n      \"id\": \"detailed-props\"\n    }}>{`Detailed props`}</h2>\n    <Props of={MenuButton} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
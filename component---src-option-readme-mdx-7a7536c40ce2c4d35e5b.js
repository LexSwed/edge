(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{Dpvj:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return r})),n.d(e,"default",(function(){return u}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var o=n("/FXl"),i=n("TjRS"),a=n("ZFoC"),c=n("yLlt");n("aD51");function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Option/readme.mdx"}});var d={_frontmatter:r},b=i.a;function u(t){var e,n,u,l=t.components,O=function(t,e){if(null==t)return{};var n,o,i={},a=Object.keys(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,["components"]);return Object(o.b)(b,p({},d,O,{components:l,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"option"},"Option"),Object(o.b)("p",null,"Option component is used inside dropdowns."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"value")," property should be specified if used within ",Object(o.b)("a",p({parentName:"li"},{href:"/edge/fx-select"}),Object(o.b)("inlineCode",{parentName:"a"},"Select"))," component"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"onSelect")," callback should be used to handle ",Object(o.b)("inlineCode",{parentName:"li"},"Option")," click within for example ",Object(o.b)("a",p({parentName:"li"},{href:"/edge/fx-menubutton"}),Object(o.b)("inlineCode",{parentName:"a"},"MenuButton")))),Object(o.b)("h2",{id:"basic-usage"},"Basic usage"),Object(o.b)("pre",null,Object(o.b)("code",p({parentName:"pre"},{className:"language-tsx"}),"import { MenuButton, Button, ListBox, Option } from '@fxtrot/edge';\n")),Object(o.b)(a.c,{__position:0,__code:'<MenuButton>\n  <Button size="s">\n    <Icon icon="more_horiz" />\n  </Button>\n  <ListBox>\n    <Option onSelect={() => alert(\'Edit\')}>\n      <Icon icon="edit" tone="outlined" />\n      Edit\n    </Option>\n    <Option onSelect={() => alert(\'Remove\')}>\n      <Icon icon="delete" tone="outlined" /> Remove\n    </Option>\n  </ListBox>\n</MenuButton>',__scope:(e={props:O,DefaultLayout:i.a,Playground:a.c,MenuButton:c.MenuButton,Button:c.Button,ListBox:c.ListBox,Box:c.Box,Stack:c.Stack,Option:c.Option,Icon:c.Icon},e.DefaultLayout=i.a,e._frontmatter=r,e),mdxType:"Playground"},Object(o.b)(c.MenuButton,{mdxType:"MenuButton"},Object(o.b)(c.Button,{size:"s",mdxType:"Button"},Object(o.b)(c.Icon,{icon:"more_horiz",mdxType:"Icon"})),Object(o.b)(c.ListBox,{mdxType:"ListBox"},Object(o.b)(c.Option,{onSelect:function(){return alert("Edit")},mdxType:"Option"},Object(o.b)(c.Icon,{icon:"edit",tone:"outlined",mdxType:"Icon"}),"Edit"),Object(o.b)(c.Option,{onSelect:function(){return alert("Remove")},mdxType:"Option"},Object(o.b)(c.Icon,{icon:"delete",tone:"outlined",mdxType:"Icon"})," Remove")))),Object(o.b)("h2",{id:"different-states"},"Different states"),Object(o.b)(a.c,{__position:1,__code:'<Box p="none" style={{ width: \'200px\' }}>\n  <Stack>\n    <Option>Default</Option>\n    <Option disabled>Disabled</Option>\n    <Option aria-selected="true">Selected</Option>\n    <Option>\n      <Icon icon="settings" mode="outlined" />\n      With icon\n    </Option>\n  </Stack>\n</Box>',__scope:(n={props:O,DefaultLayout:i.a,Playground:a.c,MenuButton:c.MenuButton,Button:c.Button,ListBox:c.ListBox,Box:c.Box,Stack:c.Stack,Option:c.Option,Icon:c.Icon},n.DefaultLayout=i.a,n._frontmatter=r,n),mdxType:"Playground"},Object(o.b)(c.Box,{p:"none",style:{width:"200px"},mdxType:"Box"},Object(o.b)(c.Stack,{mdxType:"Stack"},Object(o.b)(c.Option,{mdxType:"Option"},"Default"),Object(o.b)(c.Option,{disabled:!0,mdxType:"Option"},"Disabled"),Object(o.b)(c.Option,{"aria-selected":"true",mdxType:"Option"},"Selected"),Object(o.b)(c.Option,{mdxType:"Option"},Object(o.b)(c.Icon,{icon:"settings",mode:"outlined",mdxType:"Icon"}),"With icon")))),Object(o.b)("h2",{id:"variants"},"Variants"),Object(o.b)(a.c,{__position:2,__code:'<Box p="none" style={{ width: \'200px\' }}>\n  <Stack>\n    <Option variant="bordered">Default</Option>\n    <Option variant="bordered" disabled>\n      Disabled\n    </Option>\n    <Option variant="bordered" aria-selected="true">\n      Selected\n    </Option>\n  </Stack>\n</Box>',__scope:(u={props:O,DefaultLayout:i.a,Playground:a.c,MenuButton:c.MenuButton,Button:c.Button,ListBox:c.ListBox,Box:c.Box,Stack:c.Stack,Option:c.Option,Icon:c.Icon},u.DefaultLayout=i.a,u._frontmatter=r,u),mdxType:"Playground"},Object(o.b)(c.Box,{p:"none",style:{width:"200px"},mdxType:"Box"},Object(o.b)(c.Stack,{mdxType:"Stack"},Object(o.b)(c.Option,{variant:"bordered",mdxType:"Option"},"Default"),Object(o.b)(c.Option,{variant:"bordered",disabled:!0,mdxType:"Option"},"Disabled"),Object(o.b)(c.Option,{variant:"bordered","aria-selected":"true",mdxType:"Option"},"Selected")))))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Option/readme.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-option-readme-mdx-7a7536c40ce2c4d35e5b.js.map
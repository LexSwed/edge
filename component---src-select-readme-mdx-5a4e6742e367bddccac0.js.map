{"version":3,"sources":["webpack:///../src/Select/readme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Select","Option","Stack","Box","people","React","value","setValue","style","width","onSelect","newValue","placeholder","label","message","map","person","key","padding","size","tone","disabled","of","isMDXComponent"],"mappings":"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","file":"component---src-select-readme-mdx-5a4e6742e367bddccac0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/edge/edge/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Select, Option, Stack, Box } from '@fxtrot/edge';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Select, Option } from '@fxtrot/edge';\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const people = [\\'Taran Burt\\', \\'Jaimee Rios\\', \\'Haniya Padilla\\']\\n  const [value, setValue] = React.useState(people[0])\\n  return (\\n    <Box style={{ width: \\'240px\\' }}>\\n      <Select\\n        value={value}\\n        onSelect={newValue => setValue(newValue)}\\n        placeholder=\\\"John Doe\\\"\\n        label=\\\"Select assignee\\\"\\n        message=\\\"This person will be assigned to the task\\\"\\n      >\\n        {people.map(person => (\\n          <Option key={person} value={person}>\\n            {person}\\n          </Option>\\n        ))}\\n      </Select>\\n    </Box>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Select,\n      Option,\n      Stack,\n      Box,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const people = ['Taran Burt', 'Jaimee Rios', 'Haniya Padilla'];\n        const [value, setValue] = React.useState(people[0]);\n        return <Box style={{\n          width: '240px'\n        }} mdxType=\"Box\">\n        <Select value={value} onSelect={newValue => setValue(newValue)} placeholder=\"John Doe\" label=\"Select assignee\" message=\"This person will be assigned to the task\" mdxType=\"Select\">\n          {people.map(person => <Option key={person} value={person} mdxType=\"Option\">\n              {person}\n            </Option>)}\n        </Select>\n      </Box>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <h2 {...{\n      \"id\": \"message-and-tone\"\n    }}>{`Message and tone`}</h2>\n    <Playground __position={1} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <Stack>\\n    <Select\\n      label=\\\"Default tone\\\"\\n      size=\\\"s\\\"\\n      message=\\\"Selected person will deploy the app\\\"\\n    >\\n      {[\\'Taran Burt\\', \\'Jaimee Rios\\', \\'Haniya Padilla\\'].map(person => (\\n        <Option key={person} value={person}>\\n          {person}\\n        </Option>\\n      ))}\\n    </Select>\\n    <Select\\n      label=\\\"Critical tone\\\"\\n      size=\\\"m\\\"\\n      message=\\\"Something is incorrect\\\"\\n      tone=\\\"critical\\\"\\n    >\\n      {[\\'Taran Burt\\', \\'Jaimee Rios\\', \\'Haniya Padilla\\'].map(person => (\\n        <Option key={person} value={person}>\\n          {person}\\n        </Option>\\n      ))}\\n    </Select>\\n    <Select\\n      label=\\\"Positive tone\\\"\\n      size=\\\"l\\\"\\n      message=\\\"The selection is okay\\\"\\n      tone=\\\"positive\\\"\\n    >\\n      {[\\'Taran Burt\\', \\'Jaimee Rios\\', \\'Haniya Padilla\\'].map(person => (\\n        <Option key={person} value={person}>\\n          {person}\\n        </Option>\\n      ))}\\n    </Select>\\n    <Select label=\\\"Disabled select\\\" message=\\\"Message is ignored\\\" disabled>\\n      {[\\'Taran Burt\\', \\'Jaimee Rios\\', \\'Haniya Padilla\\'].map(person => (\\n        <Option key={person} value={person}>\\n          {person}\\n        </Option>\\n      ))}\\n    </Select>\\n  </Stack>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Select,\n      Option,\n      Stack,\n      Box,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <Stack mdxType=\"Stack\">\n      <Select label=\"Default tone\" size=\"s\" message=\"Selected person will deploy the app\" mdxType=\"Select\">\n        {['Taran Burt', 'Jaimee Rios', 'Haniya Padilla'].map(person => <Option key={person} value={person} mdxType=\"Option\">\n            {person}\n          </Option>)}\n      </Select>\n      <Select label=\"Critical tone\" size=\"m\" message=\"Something is incorrect\" tone=\"critical\" mdxType=\"Select\">\n        {['Taran Burt', 'Jaimee Rios', 'Haniya Padilla'].map(person => <Option key={person} value={person} mdxType=\"Option\">\n            {person}\n          </Option>)}\n      </Select>\n      <Select label=\"Positive tone\" size=\"l\" message=\"The selection is okay\" tone=\"positive\" mdxType=\"Select\">\n        {['Taran Burt', 'Jaimee Rios', 'Haniya Padilla'].map(person => <Option key={person} value={person} mdxType=\"Option\">\n            {person}\n          </Option>)}\n      </Select>\n      <Select label=\"Disabled select\" message=\"Message is ignored\" disabled mdxType=\"Select\">\n        {['Taran Burt', 'Jaimee Rios', 'Haniya Padilla'].map(person => <Option key={person} value={person} mdxType=\"Option\">\n            {person}\n          </Option>)}\n      </Select>\n    </Stack>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes-1\"\n    }}>{`Sizes`}</h2>\n    <Playground __position={2} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <Stack>\\n    <Select placeholder=\\\"Small inline input\\\" size=\\\"s\\\"></Select>\\n    <Select\\n      label=\\\"Normal input (default)\\\"\\n      placeholder=\\\"Medium\\\"\\n      size=\\\"m\\\"\\n    ></Select>\\n    <Select label=\\\"Prominent input\\\" placeholder=\\\"Large\\\" size=\\\"l\\\"></Select>\\n  </Stack>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Select,\n      Option,\n      Stack,\n      Box,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <Stack mdxType=\"Stack\">\n      <Select placeholder=\"Small inline input\" size=\"s\" mdxType=\"Select\"></Select>\n      <Select label=\"Normal input (default)\" placeholder=\"Medium\" size=\"m\" mdxType=\"Select\"></Select>\n      <Select label=\"Prominent input\" placeholder=\"Large\" size=\"l\" mdxType=\"Select\"></Select>\n    </Stack>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Select} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
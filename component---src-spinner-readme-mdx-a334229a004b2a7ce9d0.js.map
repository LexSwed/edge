{"version":3,"sources":["webpack:///../src/Spinner/readme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Spinner","Inline","Box","space","alignY","size","tone","style","backgroundColor","p","isMDXComponent"],"mappings":"igBAQO,IAAMA,EAAe,Q,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,8CAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,cAAeC,SAAO,GACvDL,QACAH,kBACAS,eACAC,UACAC,kBACAC,gBACAC,WAPuD,gBAQvDb,IARuD,EASvDH,eATuD,GAUtDO,QAAQ,cACb,YAAC,UAAD,CAASA,QAAQ,aAEf,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,wUAAiWC,SAAO,GACzYL,QACAH,kBACAS,eACAC,UACAC,kBACAC,gBACAC,WAPyY,gBAQzYb,IARyY,EASzYH,eATyY,GAUxYO,QAAQ,cACb,YAAC,SAAD,CAAQU,MAAM,IAAIC,OAAO,SAASX,QAAQ,UACxC,YAAC,UAAD,CAASY,KAAK,KAAKZ,QAAQ,YAC3B,YAAC,UAAD,CAASY,KAAK,IAAIZ,QAAQ,YAC1B,YAAC,UAAD,CAASY,KAAK,IAAIZ,QAAQ,YAC1B,YAAC,UAAD,CAASY,KAAK,IAAIZ,QAAQ,YAC1B,YAAC,UAAD,CAASY,KAAK,KAAKC,KAAK,QAAQb,QAAQ,YACxC,YAAC,UAAD,CAASY,KAAK,KAAKC,KAAK,OAAOb,QAAQ,YACvC,YAAC,MAAD,CAAKc,MAAO,CACNC,gBAAiB,mBAChBf,QAAQ,OACb,YAAC,UAAD,CAASY,KAAK,KAAKC,KAAK,QAAQb,QAAQ,eAI1C,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,+MAA4NC,SAAO,GACpQL,QACAH,kBACAS,eACAC,UACAC,kBACAC,gBACAC,WAPoQ,gBAQpQb,IARoQ,EASpQH,eAToQ,GAUnQO,QAAQ,cACb,YAAC,SAAD,CAAQU,MAAM,IAAIC,OAAO,SAASX,QAAQ,UACxC,YAAC,UAAD,CAASa,KAAK,OAAOb,QAAQ,YAC7B,YAAC,MAAD,CAAKgB,EAAE,IAAIF,MAAO,CACZC,gBAAiB,mBAChBf,QAAQ,OACb,YAAC,UAAD,CAASa,KAAK,QAAQb,QAAQ,aAEhC,YAAC,UAAD,CAASa,KAAK,QAAQb,QAAQ,oB,sMAOlCH,EAAWoB,gBAAiB","file":"component---src-spinner-readme-mdx-a334229a004b2a7ce9d0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/edge/edge/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Spinner, Inline, Box } from '@fxtrot/edge';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"spinner\"\n    }}>{`Spinner`}</h1>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Spinner } from '@fxtrot/edge';\n`}</code></pre>\n    <Playground __position={0} __code={'<Spinner />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Spinner,\n      Inline,\n      Box,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Spinner mdxType=\"Spinner\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <Playground __position={1} __code={'<Inline space=\\\"l\\\" alignY=\\\"center\\\">\\n  <Spinner size=\\\"xs\\\" />\\n  <Spinner size=\\\"s\\\" />\\n  <Spinner size=\\\"m\\\" />\\n  <Spinner size=\\\"l\\\" />\\n  <Spinner size=\\\"xl\\\" tone=\\\"brand\\\" />\\n  <Spinner size=\\\"xl\\\" tone=\\\"dark\\\" />\\n  <Box style={{ backgroundColor: \\'var(--gray-900)\\' }}>\\n    <Spinner size=\\\"xl\\\" tone=\\\"light\\\" />\\n  </Box>\\n</Inline>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Spinner,\n      Inline,\n      Box,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Inline space=\"l\" alignY=\"center\" mdxType=\"Inline\">\n    <Spinner size=\"xs\" mdxType=\"Spinner\" />\n    <Spinner size=\"s\" mdxType=\"Spinner\" />\n    <Spinner size=\"m\" mdxType=\"Spinner\" />\n    <Spinner size=\"l\" mdxType=\"Spinner\" />\n    <Spinner size=\"xl\" tone=\"brand\" mdxType=\"Spinner\" />\n    <Spinner size=\"xl\" tone=\"dark\" mdxType=\"Spinner\" />\n    <Box style={{\n          backgroundColor: 'var(--gray-900)'\n        }} mdxType=\"Box\">\n      <Spinner size=\"xl\" tone=\"light\" mdxType=\"Spinner\" />\n    </Box>\n  </Inline>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tones\"\n    }}>{`Tones`}</h2>\n    <Playground __position={2} __code={'<Inline space=\\\"l\\\" alignY=\\\"center\\\">\\n  <Spinner tone=\\\"dark\\\" />\\n  <Box p=\\\"s\\\" style={{ backgroundColor: \\'var(--gray-900)\\' }}>\\n    <Spinner tone=\\\"light\\\" />\\n  </Box>\\n  <Spinner tone=\\\"brand\\\" />\\n</Inline>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Spinner,\n      Inline,\n      Box,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Inline space=\"l\" alignY=\"center\" mdxType=\"Inline\">\n    <Spinner tone=\"dark\" mdxType=\"Spinner\" />\n    <Box p=\"s\" style={{\n          backgroundColor: 'var(--gray-900)'\n        }} mdxType=\"Box\">\n      <Spinner tone=\"light\" mdxType=\"Spinner\" />\n    </Box>\n    <Spinner tone=\"brand\" mdxType=\"Spinner\" />\n  </Inline>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
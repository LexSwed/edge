{"version":3,"sources":["webpack:///../src/TextField/readme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","TextField","Box","Icon","Stack","padding","width","label","placeholder","message","React","value","setValue","onChange","e","target","allowClear","disabled","inputProps","defaultValue","size","tone","type","icon","isMDXComponent"],"mappings":"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","file":"component---src-text-field-readme-mdx-4e4a95ebf1ac7035f986.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/edge/edge/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground } from 'docz';\nimport TextField from './TextField';\nimport Box from '../Box';\nimport Icon from '../Icon';\nimport Stack from '../Stack';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Text } from '@fxtrot/edge';\n`}</code></pre>\n    <Playground __position={0} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <TextField\\n    label=\\\"Full name\\\"\\n    placeholder=\\\"John Doe\\\"\\n    message=\\\"We just want to know how we can approach you\\\"\\n  />\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      TextField,\n      Box,\n      Icon,\n      Stack,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <TextField label=\"Full name\" placeholder=\"John Doe\" message=\"We just want to know how we can approach you\" mdxType=\"TextField\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-clear-button\"\n    }}>{`With clear button`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [value, setValue] = React.useState(\\'Clear me\\')\\n  return (\\n    <Box padding=\\\"none\\\" width={300}>\\n      <Stack>\\n        <TextField\\n          label=\\\"Allows clearing the input\\\"\\n          value={value}\\n          onChange={e => setValue(e.target.value)}\\n          allowClear\\n        />\\n        <TextField\\n          label=\\\"Disabled\\\"\\n          value={value}\\n          onChange={e => setValue(e.target.value)}\\n          allowClear\\n          disabled\\n        />\\n      </Stack>\\n    </Box>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      TextField,\n      Box,\n      Icon,\n      Stack,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = React.useState('Clear me');\n        return <Box padding=\"none\" width={300} mdxType=\"Box\">\n        <Stack mdxType=\"Stack\">\n          <TextField label=\"Allows clearing the input\" value={value} onChange={e => setValue(e.target.value)} allowClear mdxType=\"TextField\" />\n          <TextField label=\"Disabled\" value={value} onChange={e => setValue(e.target.value)} allowClear disabled mdxType=\"TextField\" />\n        </Stack>\n      </Box>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"be-aware\"\n    }}>{`Be aware`}</h4>\n    <p>{`If you provide `}<inlineCode parentName=\"p\">{`defaultValue`}</inlineCode>{`, but not `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` prop, the clear button won't be shown, as it only checks for `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` prop.\nTo fix this, `}<inlineCode parentName=\"p\">{`TextField`}</inlineCode>{` component will need to have an internal state, making the `}<inlineCode parentName=\"p\">{`<input />`}</inlineCode>{`\nalways controlled. This creattes additional overhead and code to cover such rare case.`}</p>\n    <Playground __position={2} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <TextField\\n    label=\\\"Allows clearing the input\\\"\\n    allowClear\\n    inputProps={{ defaultValue: \\'Clear me\\' }}\\n  />\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      TextField,\n      Box,\n      Icon,\n      Stack,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <TextField label=\"Allows clearing the input\" allowClear inputProps={{\n          defaultValue: 'Clear me'\n        }} mdxType=\"TextField\" />\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"message-and-tone\"\n    }}>{`Message and tone`}</h2>\n    <Playground __position={3} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <Stack>\\n    <TextField\\n      label=\\\"Default tone\\\"\\n      size=\\\"s\\\"\\n      message=\\\"This will be used later\\\"\\n    />\\n    <TextField\\n      label=\\\"Critical tone\\\"\\n      size=\\\"m\\\"\\n      message=\\\"The input is incorrect\\\"\\n      tone=\\\"critical\\\"\\n    />\\n    <TextField\\n      label=\\\"Positive tone\\\"\\n      size=\\\"l\\\"\\n      type=\\\"password\\\"\\n      message=\\\"The password seems strong\\\"\\n      tone=\\\"positive\\\"\\n    />\\n  </Stack>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      TextField,\n      Box,\n      Icon,\n      Stack,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <Stack mdxType=\"Stack\">\n      <TextField label=\"Default tone\" size=\"s\" message=\"This will be used later\" mdxType=\"TextField\" />\n      <TextField label=\"Critical tone\" size=\"m\" message=\"The input is incorrect\" tone=\"critical\" mdxType=\"TextField\" />\n      <TextField label=\"Positive tone\" size=\"l\" type=\"password\" message=\"The password seems strong\" tone=\"positive\" mdxType=\"TextField\" />\n    </Stack>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <Playground __position={4} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <Stack>\\n    <TextField placeholder=\\\"Small inline input\\\" size=\\\"s\\\" />\\n    <TextField label=\\\"Normal input (default)\\\" placeholder=\\\"Medium\\\" size=\\\"m\\\" />\\n    <TextField label=\\\"Prominent input\\\" placeholder=\\\"Large\\\" size=\\\"l\\\" />\\n  </Stack>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      TextField,\n      Box,\n      Icon,\n      Stack,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <Stack mdxType=\"Stack\">\n      <TextField placeholder=\"Small inline input\" size=\"s\" mdxType=\"TextField\" />\n      <TextField label=\"Normal input (default)\" placeholder=\"Medium\" size=\"m\" mdxType=\"TextField\" />\n      <TextField label=\"Prominent input\" placeholder=\"Large\" size=\"l\" mdxType=\"TextField\" />\n    </Stack>\n  </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-icon\"\n    }}>{`With icon`}</h2>\n    <Playground __position={5} __code={'<Box padding=\\\"none\\\" width={300}>\\n  <Stack>\\n    <TextField\\n      label=\\\"Small with\\\"\\n      size=\\\"s\\\"\\n      icon=\\\"search\\\"\\n      value=\\\"Small sized\\\"\\n      onChange={() => {}}\\n      allowClear\\n    />\\n    <TextField\\n      label=\\\"Normal input (default)\\\"\\n      size=\\\"m\\\"\\n      icon=\\\"expand_more\\\"\\n      value=\\\"Medium sized\\\"\\n      onChange={() => {}}\\n      allowClear\\n    />\\n    <TextField\\n      label=\\\"Prominent input\\\"\\n      size=\\\"l\\\"\\n      icon=\\\"search\\\"\\n      value=\\\"Large sized\\\"\\n      onChange={() => {}}\\n      allowClear\\n    />\\n  </Stack>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      TextField,\n      Box,\n      Icon,\n      Stack,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Box padding=\"none\" width={300} mdxType=\"Box\">\n    <Stack mdxType=\"Stack\">\n      <TextField label=\"Small with\" size=\"s\" icon=\"search\" value=\"Small sized\" onChange={() => {}} allowClear mdxType=\"TextField\" />\n      <TextField label=\"Normal input (default)\" size=\"m\" icon=\"expand_more\" value=\"Medium sized\" onChange={() => {}} allowClear mdxType=\"TextField\" />\n      <TextField label=\"Prominent input\" size=\"l\" icon=\"search\" value=\"Large sized\" onChange={() => {}} allowClear mdxType=\"TextField\" />\n    </Stack>\n  </Box>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"/ooK":function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return s})),a.d(e,"default",(function(){return u}));var n=a("Fcif"),o=a("+I+c"),i=a("/FXl"),c=a("TjRS"),r=a("ZFoC"),x=a("0brI"),l=a("pS5P"),b=a("RRD+"),s=(a("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Text/readme.mdx"}});var d={_frontmatter:s},m=c.a;function u(t){var e,a,u,p=t.components,T=Object(o.a)(t,["components"]);return Object(i.b)(m,Object(n.a)({},d,T,{components:p,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"text"},"Text"),Object(i.b)("h2",{id:"basic-usage"},"Basic usage"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"import { Text } from '@fxtrot/edge';\n")),Object(i.b)(r.c,{__position:0,__code:"<Text>Just text</Text>",__scope:(e={props:T,DefaultLayout:c.a,Playground:r.c,Box:x.a,Text:l.a,Stack:b.a},e.DefaultLayout=c.a,e._frontmatter=s,e),mdxType:"Playground"},Object(i.b)(l.a,{mdxType:"Text"},"Just text")),Object(i.b)("h2",{id:"variants-and-truncation"},"Variants and truncation"),Object(i.b)(r.c,{__position:1,__code:'<Stack>\n  <Text>Default text</Text>\n  <Text variant="light">As a secondary text</Text>\n  <Box width="300px">\n    <Text maxLines={1}>\n      This text is long enough to occupy more than 2 lines and so it is\n      truncated with ellipsis.\n    </Text>\n  </Box>\n</Stack>',__scope:(a={props:T,DefaultLayout:c.a,Playground:r.c,Box:x.a,Text:l.a,Stack:b.a},a.DefaultLayout=c.a,a._frontmatter=s,a),mdxType:"Playground"},Object(i.b)(b.a,{mdxType:"Stack"},Object(i.b)(l.a,{mdxType:"Text"},"Default text"),Object(i.b)(l.a,{variant:"light",mdxType:"Text"},"As a secondary text"),Object(i.b)(x.a,{width:"300px",mdxType:"Box"},Object(i.b)(l.a,{maxLines:1,mdxType:"Text"},"This text is long enough to occupy more than 2 lines and so it is truncated with ellipsis.")))),Object(i.b)("h2",{id:"alignment"},"Alignment"),Object(i.b)(r.c,{__position:2,__code:'<Stack>\n  <Text align="left">Left alignment (default)</Text>\n  <Text align="center">Center alignment</Text>\n  <Text align="right">Right alignment</Text>\n</Stack>',__scope:(u={props:T,DefaultLayout:c.a,Playground:r.c,Box:x.a,Text:l.a,Stack:b.a},u.DefaultLayout=c.a,u._frontmatter=s,u),mdxType:"Playground"},Object(i.b)(b.a,{mdxType:"Stack"},Object(i.b)(l.a,{align:"left",mdxType:"Text"},"Left alignment (default)"),Object(i.b)(l.a,{align:"center",mdxType:"Text"},"Center alignment"),Object(i.b)(l.a,{align:"right",mdxType:"Text"},"Right alignment"))))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Text/readme.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-text-readme-mdx-1a97b0954df52b06f332.js.map
(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"/ooK":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return x})),n.d(e,"default",(function(){return u}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),o=n("TjRS"),c=n("ZFoC"),i=n("yLlt");n("aD51");function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var x={};void 0!==x&&x&&x===Object(x)&&Object.isExtensible(x)&&!x.hasOwnProperty("__filemeta")&&Object.defineProperty(x,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Text/readme.mdx"}});var l={_frontmatter:x},s=o.a;function u(t){var e,n,u,T=t.components,b=function(t,e){if(null==t)return{};var n,a,o={},c=Object.keys(t);for(a=0;a<c.length;a++)n=c[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["components"]);return Object(a.b)(s,r({},l,b,{components:T,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"text"},"Text"),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"import { Text } from '@fxtrot/edge';\n")),Object(a.b)(c.c,{__position:0,__code:"<Text>Just text</Text>",__scope:(e={props:b,DefaultLayout:o.a,Playground:c.c,Text:i.Text,Stack:i.Stack},e.DefaultLayout=o.a,e._frontmatter=x,e),mdxType:"Playground"},Object(a.b)(i.Text,{mdxType:"Text"},"Just text")),Object(a.b)("h2",{id:"tone-and-truncation"},"Tone and truncation"),Object(a.b)(c.c,{__position:1,__code:"<Stack>\n  <Text>Default text</Text>\n  <Text tone=\"light\">As a secondary text</Text>\n  <Text style={{ width: '300px' }} maxLines={1}>\n    This text is long enough to occupy more than 2 lines and so it is\n    truncated with ellipsis.\n  </Text>\n</Stack>",__scope:(n={props:b,DefaultLayout:o.a,Playground:c.c,Text:i.Text,Stack:i.Stack},n.DefaultLayout=o.a,n._frontmatter=x,n),mdxType:"Playground"},Object(a.b)(i.Stack,{mdxType:"Stack"},Object(a.b)(i.Text,{mdxType:"Text"},"Default text"),Object(a.b)(i.Text,{tone:"light",mdxType:"Text"},"As a secondary text"),Object(a.b)(i.Text,{style:{width:"300px"},maxLines:1,mdxType:"Text"},"This text is long enough to occupy more than 2 lines and so it is truncated with ellipsis."))),Object(a.b)("h2",{id:"alignment"},"Alignment"),Object(a.b)(c.c,{__position:2,__code:'<Stack>\n  <Text align="left">Left alignment (default)</Text>\n  <Text align="center">Center alignment</Text>\n  <Text align="right">Right alignment</Text>\n</Stack>',__scope:(u={props:b,DefaultLayout:o.a,Playground:c.c,Text:i.Text,Stack:i.Stack},u.DefaultLayout=o.a,u._frontmatter=x,u),mdxType:"Playground"},Object(a.b)(i.Stack,{mdxType:"Stack"},Object(a.b)(i.Text,{align:"left",mdxType:"Text"},"Left alignment (default)"),Object(a.b)(i.Text,{align:"center",mdxType:"Text"},"Center alignment"),Object(a.b)(i.Text,{align:"right",mdxType:"Text"},"Right alignment"))))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Text/readme.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-text-readme-mdx-8c8f7a56609dfa399d65.js.map
(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"/ooK":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return x})),n.d(e,"default",(function(){return u}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),o=n("TjRS"),i=n("ZFoC"),c=n("yLlt");n("aD51");function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var x={};void 0!==x&&x&&x===Object(x)&&Object.isExtensible(x)&&!x.hasOwnProperty("__filemeta")&&Object.defineProperty(x,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Text/readme.mdx"}});var l={_frontmatter:x},s=o.a;function u(t){var e,n,u,b=t.components,T=function(t,e){if(null==t)return{};var n,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["components"]);return Object(a.b)(s,r({},l,T,{components:b,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"text"},"Text"),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-tsx"}),"import { Text } from '@fxtrot/edge';\n")),Object(a.b)(i.c,{__position:0,__code:"<Text>Just text</Text>",__scope:(e={props:T,DefaultLayout:o.a,Playground:i.c,Box:c.Box,Text:c.Text,Stack:c.Stack},e.DefaultLayout=o.a,e._frontmatter=x,e),mdxType:"Playground"},Object(a.b)(c.Text,{mdxType:"Text"},"Just text")),Object(a.b)("h2",{id:"variants-and-truncation"},"Variants and truncation"),Object(a.b)(i.c,{__position:1,__code:'<Stack>\n  <Text>Default text</Text>\n  <Text variant="light">As a secondary text</Text>\n  <Box width="300px">\n    <Text maxLines={1}>\n      This text is long enough to occupy more than 2 lines and so it is\n      truncated with ellipsis.\n    </Text>\n  </Box>\n</Stack>',__scope:(n={props:T,DefaultLayout:o.a,Playground:i.c,Box:c.Box,Text:c.Text,Stack:c.Stack},n.DefaultLayout=o.a,n._frontmatter=x,n),mdxType:"Playground"},Object(a.b)(c.Stack,{mdxType:"Stack"},Object(a.b)(c.Text,{mdxType:"Text"},"Default text"),Object(a.b)(c.Text,{variant:"light",mdxType:"Text"},"As a secondary text"),Object(a.b)(c.Box,{width:"300px",mdxType:"Box"},Object(a.b)(c.Text,{maxLines:1,mdxType:"Text"},"This text is long enough to occupy more than 2 lines and so it is truncated with ellipsis.")))),Object(a.b)("h2",{id:"alignment"},"Alignment"),Object(a.b)(i.c,{__position:2,__code:'<Stack>\n  <Text align="left">Left alignment (default)</Text>\n  <Text align="center">Center alignment</Text>\n  <Text align="right">Right alignment</Text>\n</Stack>',__scope:(u={props:T,DefaultLayout:o.a,Playground:i.c,Box:c.Box,Text:c.Text,Stack:c.Stack},u.DefaultLayout=o.a,u._frontmatter=x,u),mdxType:"Playground"},Object(a.b)(c.Stack,{mdxType:"Stack"},Object(a.b)(c.Text,{align:"left",mdxType:"Text"},"Left alignment (default)"),Object(a.b)(c.Text,{align:"center",mdxType:"Text"},"Center alignment"),Object(a.b)(c.Text,{align:"right",mdxType:"Text"},"Right alignment"))))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Text/readme.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-text-readme-mdx-cf2c269683a2b27dce20.js.map
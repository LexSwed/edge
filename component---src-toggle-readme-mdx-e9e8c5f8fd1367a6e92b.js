(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{xkc4:function(e,t,g){"use strict";g.r(t),g.d(t,"_frontmatter",(function(){return i})),g.d(t,"default",(function(){return b}));g("5hJT"),g("W1QL"),g("K/PF"),g("t91x"),g("75LO"),g("PJhk");var l=g("mXGw"),o=g("/FXl"),n=g("TjRS"),a=g("ZFoC"),s=g("yLlt");g("aD51");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var g=arguments[t];for(var l in g)Object.prototype.hasOwnProperty.call(g,l)&&(e[l]=g[l])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Toggle/readme.mdx"}});var d={_frontmatter:i},r=n.a;function b(e){var t,g,b,m,T,h,p,f=e.components,u=function(e,t){if(null==e)return{};var g,l,o={},n=Object.keys(e);for(l=0;l<n.length;l++)g=n[l],t.indexOf(g)>=0||(o[g]=e[g]);return o}(e,["components"]);return Object(o.b)(r,c({},d,u,{components:f,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"toggle"},"Toggle"),Object(o.b)("h2",{id:"basic-usage"},"Basic usage"),Object(o.b)("pre",null,Object(o.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"import { Toggle } from '@fxtrot/edge';\n")),Object(o.b)(a.c,{__position:0,__code:'() => {\n  const [toggle, setToggle] = React.useState(false)\n  return (\n    <Toggle\n      checked={toggle}\n      label="Default toggle"\n      onChange={() => setToggle(!toggle)}\n    />\n  )\n}',__scope:(t={props:u,DefaultLayout:n.a,Playground:a.c,Toggle:s.Toggle,Box:s.Box,Stack:s.Stack},t.DefaultLayout=n.a,t._frontmatter=i,t),mdxType:"Playground"},(function(){var e=l.useState(!1),t=e[0],g=e[1];return Object(o.b)(s.Toggle,{checked:t,label:"Default toggle",onChange:function(){return g(!t)},mdxType:"Toggle"})})),Object(o.b)("h2",{id:"tone-and-message"},"Tone and message"),Object(o.b)(a.c,{__position:1,__code:'<Box\n  display="grid"\n  gridAutoRows="auto"\n  gridTemplateColumns="repeat(4, 1fr)"\n  gridGap="s"\n>\n  <Toggle label="Default toggle" message="Message for toggle" />\n  <Toggle\n    label="Default toggle checked"\n    message="Message for toggle"\n    checked\n  />\n  <Toggle\n    label="Default toggle disabled"\n    message="Message for toggle"\n    disabled\n  />\n  <Toggle\n    label="Default toggle checked disabled"\n    message="Message for toggle"\n    checked\n    disabled\n  />\n  <Toggle\n    checked={false}\n    label="Positive tone"\n    tone="positive"\n    message="Everything is alright"\n  />\n  <Toggle\n    checked={false}\n    label="Positive tone checked"\n    tone="positive"\n    message="Everything is alright"\n    checked\n  />\n  <Toggle\n    checked={false}\n    label="Positive tone disabled"\n    tone="positive"\n    message="Everything is alright"\n    disabled\n  />\n  <Toggle\n    checked={false}\n    label="Positive tone checked disabled"\n    tone="positive"\n    message="Everything is alright"\n    checked\n    disabled\n  />\n\n  <Toggle\n    checked={false}\n    label="Critical tone"\n    tone="critical"\n    message="Something went wrong..."\n  />\n  <Toggle\n    checked={false}\n    label="Critical tone checked"\n    tone="critical"\n    message="Something went wrong..."\n    checked\n  />\n  <Toggle\n    checked={false}\n    label="Critical tone disabled"\n    tone="critical"\n    message="Something went wrong..."\n    disabled\n  />\n  <Toggle\n    checked={false}\n    label="Critical tone checked disabled"\n    tone="critical"\n    message="Something went wrong..."\n    checked\n    disabled\n  />\n</Box>',__scope:(g={props:u,DefaultLayout:n.a,Playground:a.c,Toggle:s.Toggle,Box:s.Box,Stack:s.Stack},g.DefaultLayout=n.a,g._frontmatter=i,g),mdxType:"Playground"},Object(o.b)(s.Box,{display:"grid",gridAutoRows:"auto",gridTemplateColumns:"repeat(4, 1fr)",gridGap:"s",mdxType:"Box"},Object(o.b)(s.Toggle,{label:"Default toggle",message:"Message for toggle",mdxType:"Toggle"}),Object(o.b)(s.Toggle,{label:"Default toggle checked",message:"Message for toggle",checked:!0,mdxType:"Toggle"}),Object(o.b)(s.Toggle,{label:"Default toggle disabled",message:"Message for toggle",disabled:!0,mdxType:"Toggle"}),Object(o.b)(s.Toggle,{label:"Default toggle checked disabled",message:"Message for toggle",checked:!0,disabled:!0,mdxType:"Toggle"}),Object(o.b)(s.Toggle,{checked:!1,label:"Positive tone",tone:"positive",message:"Everything is alright",mdxType:"Toggle"}),Object(o.b)(s.Toggle,((b={checked:!1,label:"Positive tone checked",tone:"positive",message:"Everything is alright"}).checked=!0,b.mdxType="Toggle",b)),Object(o.b)(s.Toggle,{checked:!1,label:"Positive tone disabled",tone:"positive",message:"Everything is alright",disabled:!0,mdxType:"Toggle"}),Object(o.b)(s.Toggle,((m={checked:!1,label:"Positive tone checked disabled",tone:"positive",message:"Everything is alright"}).checked=!0,m.disabled=!0,m.mdxType="Toggle",m)),Object(o.b)(s.Toggle,{checked:!1,label:"Critical tone",tone:"critical",message:"Something went wrong...",mdxType:"Toggle"}),Object(o.b)(s.Toggle,((T={checked:!1,label:"Critical tone checked",tone:"critical",message:"Something went wrong..."}).checked=!0,T.mdxType="Toggle",T)),Object(o.b)(s.Toggle,{checked:!1,label:"Critical tone disabled",tone:"critical",message:"Something went wrong...",disabled:!0,mdxType:"Toggle"}),Object(o.b)(s.Toggle,((h={checked:!1,label:"Critical tone checked disabled",tone:"critical",message:"Something went wrong..."}).checked=!0,h.disabled=!0,h.mdxType="Toggle",h)))),Object(o.b)("h2",{id:"align"},"Align"),Object(o.b)(a.c,{__position:2,__code:'<Box width={400}>\n  <Stack space="m">\n    <Toggle label="Aligned left" message="Message for toggle" />\n    <Toggle\n      label="Aligned right"\n      tone="critical"\n      message="Message for toggle"\n      align="right"\n    />\n    <Toggle label="Apart" message="Message for toggle" align="apart" />\n  </Stack>\n</Box>',__scope:(p={props:u,DefaultLayout:n.a,Playground:a.c,Toggle:s.Toggle,Box:s.Box,Stack:s.Stack},p.DefaultLayout=n.a,p._frontmatter=i,p),mdxType:"Playground"},Object(o.b)(s.Box,{width:400,mdxType:"Box"},Object(o.b)(s.Stack,{space:"m",mdxType:"Stack"},Object(o.b)(s.Toggle,{label:"Aligned left",message:"Message for toggle",mdxType:"Toggle"}),Object(o.b)(s.Toggle,{label:"Aligned right",tone:"critical",message:"Message for toggle",align:"right",mdxType:"Toggle"}),Object(o.b)(s.Toggle,{label:"Apart",message:"Message for toggle",align:"apart",mdxType:"Toggle"})))))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Toggle/readme.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-toggle-readme-mdx-e9e8c5f8fd1367a6e92b.js.map
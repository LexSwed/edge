(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{HVoQ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return i}));var a=n("Fcif"),r=n("+I+c"),o=n("/FXl"),c=n("TjRS"),l=(n("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/usage.mdx"}});var b={_frontmatter:l},p=c.a;function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)(p,Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"installation"},"Installation"),Object(o.b)("p",null,"Install the library:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install @fxtrot/edge styled-components@5.x --save\n")),Object(o.b)("p",null,"Or via ",Object(o.b)("inlineCode",{parentName:"p"},"yarn"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @fxtrot/edge styled-components@5.x\n")),Object(o.b)("p",null,"Wrap your app in ",Object(o.b)("inlineCode",{parentName:"p"},"ThemeProvider")," which currently just injects global CSS-variables, but in case there will be some proper CSS-in-JS solution, it can actually do something:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import ReactDOM from 'react-dom';\n\nimport { Edge } from '@fxtrot/edge';\n\nReactDOM.render(\n  <Edge>\n    <App />\n  </Edge>\n);\n")),Object(o.b)("p",null,"Or for concurrent mode"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import ReactDOM from 'react-dom';\n\nimport { Edge } from '@fxtrot/edge';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <Edge>\n    <App />\n  </Edge>\n);\n")),Object(o.b)("h1",{id:"usage"},"Usage"),Object(o.b)("p",null,"Components are fully typed with ",Object(o.b)("inlineCode",{parentName:"p"},"TypeScript"),", but you don't have to use ",Object(o.b)("inlineCode",{parentName:"p"},"TypeScript"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\n\nimport { TextField } from '@fxtrot/edge';\n\nconst MyComponent = () => {\n  const [text, setText] = React.useState('Hello world!');\n\n  return (\n    <main>\n      <h1>{text}</h1>\n      <TextField value={text} onChange={(e) => setText(e.target.value)} label=\"Welcome message\" />\n    </main>\n  );\n};\n")))}void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/usage.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-usage-mdx-c354af95e9a438c09626.js.map
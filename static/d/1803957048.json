{"data":{"doczDb":{"id":"ace00e2b-9c46-5e24-a19a-5ed242ca9c64","db":"{\"config\":{\"title\":\"Edge\",\"description\":\"A component library for @foxtrot project\",\"menu\":[],\"version\":\"0.1.0\",\"repository\":null,\"native\":false,\"themeConfig\":{\"showPlaygroundEditor\":false},\"separator\":\"-\",\"themesDir\":\"src/.docs\",\"public\":\"src/.docs/public\",\"src\":\"src/\",\"dest\":\"/docs\",\"base\":\"/edge\",\"typescript\":true,\"port\":4000,\"hashRouter\":true,\"propsParser\":true},\"entries\":[{\"key\":\"src/src/usage.mdx\",\"value\":{\"name\":\"Usage\",\"route\":\"/\",\"id\":\"5cb81c7b1c7ab258baaf227cf665f83d\",\"filepath\":\"src/src/usage.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/usage.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-usage\",\"menu\":\"\",\"headings\":[{\"slug\":\"installation\",\"depth\":1,\"value\":\"Installation\"},{\"slug\":\"usage\",\"depth\":1,\"value\":\"Usage\"}]}},{\"key\":\"src/src/Box/readme.mdx\",\"value\":{\"name\":\"Box\",\"menu\":\"Components\",\"route\":\"/fx-box\",\"id\":\"da6ee3130029fea1e63dc91724340b56\",\"filepath\":\"src/src/Box/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Box/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-box-readme\",\"headings\":[{\"slug\":\"box\",\"depth\":1,\"value\":\"Box\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"paddings\",\"depth\":2,\"value\":\"Paddings\"}]}},{\"key\":\"src/src/Button/readme.mdx\",\"value\":{\"name\":\"Button\",\"route\":\"/fx-button\",\"menu\":\"Components\",\"id\":\"69d1a1eecd1a35a94fee46027b8d6182\",\"filepath\":\"src/src/Button/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Button/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-button-readme\",\"headings\":[{\"slug\":\"button\",\"depth\":1,\"value\":\"Button\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"variants\",\"depth\":2,\"value\":\"Variants\"},{\"slug\":\"sizes\",\"depth\":2,\"value\":\"Sizes\"},{\"slug\":\"with-icon\",\"depth\":2,\"value\":\"With Icon\"}]}},{\"key\":\"src/src/Card/readme.mdx\",\"value\":{\"name\":\"Card\",\"route\":\"/fx-card\",\"menu\":\"Components\",\"id\":\"7dccee6dd91bd62df10be8819b22f014\",\"filepath\":\"src/src/Card/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Card/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-card-readme\",\"headings\":[{\"slug\":\"card\",\"depth\":1,\"value\":\"Card\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"elevation\",\"depth\":2,\"value\":\"Elevation\"}]}},{\"key\":\"src/src/Checkbox/readme.mdx\",\"value\":{\"name\":\"Checkbox\",\"route\":\"/fx-checkbox\",\"menu\":\"Components\",\"id\":\"9247b6cff9ae7de7931fd6cce3d1a0b2\",\"filepath\":\"src/src/Checkbox/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Checkbox/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-checkbox-readme\",\"headings\":[{\"slug\":\"checkbox\",\"depth\":1,\"value\":\"Checkbox\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"tone\",\"depth\":2,\"value\":\"Tone\"},{\"slug\":\"checked-inner-text\",\"depth\":2,\"value\":\"Checked inner Text\"}]}},{\"key\":\"src/src/Column/readme.mdx\",\"value\":{\"name\":\"Column\",\"route\":\"/fx-column\",\"menu\":\"Components\",\"id\":\"16ccca110fbe9776909438f5b7e97662\",\"filepath\":\"src/src/Column/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Column/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-column-readme\",\"headings\":[{\"slug\":\"column\",\"depth\":1,\"value\":\"Column\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/src/Columns/readme.mdx\",\"value\":{\"name\":\"Columns\",\"route\":\"/fx-columns\",\"menu\":\"Components\",\"id\":\"f61112a323f71559da7a77a163838abb\",\"filepath\":\"src/src/Columns/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Columns/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-columns-readme\",\"headings\":[{\"slug\":\"columns\",\"depth\":1,\"value\":\"Columns\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"space\",\"depth\":2,\"value\":\"Space\"},{\"slug\":\"alignment\",\"depth\":2,\"value\":\"Alignment\"}]}},{\"key\":\"src/src/ContentBlock/readme.mdx\",\"value\":{\"name\":\"ContentBlock\",\"route\":\"/fx-contentblock\",\"menu\":\"Components\",\"id\":\"32e9eb7bc0d0d2257542d800f9b37e41\",\"filepath\":\"src/src/ContentBlock/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/ContentBlock/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-content-block-readme\",\"headings\":[{\"slug\":\"contentblock\",\"depth\":1,\"value\":\"ContentBlock\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/src/Edge/readme.mdx\",\"value\":{\"name\":\"ThemeProvider\",\"route\":\"/fx-edge\",\"menu\":\"Components\",\"id\":\"714373665879a682256380034017b971\",\"filepath\":\"src/src/Edge/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Edge/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-edge-readme\",\"headings\":[{\"slug\":\"themeprovider\",\"depth\":1,\"value\":\"ThemeProvider\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/src/FieldLabel/readme.mdx\",\"value\":{\"name\":\"FieldLabel\",\"route\":\"/fx-fieldlabel\",\"menu\":\"Components\",\"id\":\"0ac61ad0084ed46b2e70f4ed7d947d2e\",\"filepath\":\"src/src/FieldLabel/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/FieldLabel/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-field-label-readme\",\"headings\":[{\"slug\":\"fieldlabel\",\"depth\":1,\"value\":\"FieldLabel\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/src/FieldMessage/readme.mdx\",\"value\":{\"name\":\"FieldMessage\",\"route\":\"/fx-fieldMessage\",\"menu\":\"Components\",\"id\":\"244d4573b8ee74b578fcf98b9012d8de\",\"filepath\":\"src/src/FieldMessage/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/FieldMessage/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-field-message-readme\",\"headings\":[{\"slug\":\"fieldmessage\",\"depth\":1,\"value\":\"FieldMessage\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"tones\",\"depth\":2,\"value\":\"Tones\"}]}},{\"key\":\"src/src/Heading/readme.mdx\",\"value\":{\"name\":\"Heading\",\"route\":\"/fx-heading\",\"menu\":\"Components\",\"id\":\"3fc0f3d90fe99580cf2db69792ca7ef7\",\"filepath\":\"src/src/Heading/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Heading/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-heading-readme\",\"headings\":[{\"slug\":\"heading\",\"depth\":1,\"value\":\"Heading\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"variants-and-size\",\"depth\":2,\"value\":\"Variants and size\"}]}},{\"key\":\"src/src/Icon/readme.mdx\",\"value\":{\"name\":\"Icon\",\"route\":\"/fx-icon\",\"menu\":\"Components\",\"id\":\"e656b15af47a5d06f41e30f3a2b974df\",\"filepath\":\"src/src/Icon/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Icon/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-icon-readme\",\"headings\":[{\"slug\":\"icon\",\"depth\":1,\"value\":\"Icon\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"variants\",\"depth\":2,\"value\":\"Variants\"},{\"slug\":\"sizes\",\"depth\":2,\"value\":\"Sizes\"}]}},{\"key\":\"src/src/IconButton/readme.mdx\",\"value\":{\"name\":\"IconButton\",\"route\":\"/fx-iconbutton\",\"menu\":\"Components\",\"id\":\"2c26bbecefc9c82ab1c7f7d78564d365\",\"filepath\":\"src/src/IconButton/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/IconButton/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-icon-button-readme\",\"headings\":[{\"slug\":\"iconbutton\",\"depth\":1,\"value\":\"IconButton\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"size\",\"depth\":3,\"value\":\"Size\"}]}},{\"key\":\"src/src/Inline/readme.mdx\",\"value\":{\"name\":\"Inline\",\"route\":\"/fx-inline\",\"menu\":\"Components\",\"id\":\"69b4540b8f85f6f222219d89c251d982\",\"filepath\":\"src/src/Inline/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Inline/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-inline-readme\",\"headings\":[{\"slug\":\"inline\",\"depth\":1,\"value\":\"Inline\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"space\",\"depth\":2,\"value\":\"Space\"},{\"slug\":\"no-space\",\"depth\":3,\"value\":\"No space\"},{\"slug\":\"extra-small\",\"depth\":3,\"value\":\"Extra small\"},{\"slug\":\"small\",\"depth\":3,\"value\":\"Small\"},{\"slug\":\"medium\",\"depth\":3,\"value\":\"Medium\"},{\"slug\":\"large\",\"depth\":3,\"value\":\"Large\"},{\"slug\":\"extra-large\",\"depth\":3,\"value\":\"Extra large\"},{\"slug\":\"alignment\",\"depth\":2,\"value\":\"Alignment\"},{\"slug\":\"left-default\",\"depth\":3,\"value\":\"Left (default)\"},{\"slug\":\"center\",\"depth\":3,\"value\":\"Center\"},{\"slug\":\"right\",\"depth\":3,\"value\":\"Right\"},{\"slug\":\"vertical-alignment\",\"depth\":2,\"value\":\"Vertical alignment\"},{\"slug\":\"top\",\"depth\":3,\"value\":\"Top\"},{\"slug\":\"center-default\",\"depth\":3,\"value\":\"Center (default)\"},{\"slug\":\"bottom\",\"depth\":3,\"value\":\"Bottom\"}]}},{\"key\":\"src/src/ListBox/readme.mdx\",\"value\":{\"name\":\"ListBox\",\"route\":\"/fx-listbox\",\"menu\":\"Components\",\"id\":\"68865da225a647b1569df1a4ff859021\",\"filepath\":\"src/src/ListBox/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/ListBox/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-list-box-readme\",\"headings\":[{\"slug\":\"listbox\",\"depth\":1,\"value\":\"ListBox\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/src/Logo/readme.mdx\",\"value\":{\"name\":\"Logo\",\"route\":\"/fx-logo\",\"menu\":\"Components\",\"id\":\"bb07b3cdeb2571d065eb85314b7a014f\",\"filepath\":\"src/src/Logo/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Logo/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-logo-readme\",\"headings\":[{\"slug\":\"logo\",\"depth\":1,\"value\":\"Logo\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"variants\",\"depth\":2,\"value\":\"Variants\"},{\"slug\":\"size\",\"depth\":2,\"value\":\"Size\"}]}},{\"key\":\"src/src/MenuButton/readme.mdx\",\"value\":{\"name\":\"MenuButton\",\"route\":\"/fx-menubutton\",\"menu\":\"Components\",\"id\":\"47fa24ba27a0d3d875c4ffd8a4ac8229\",\"filepath\":\"src/src/MenuButton/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/MenuButton/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-menu-button-readme\",\"headings\":[{\"slug\":\"menubutton\",\"depth\":1,\"value\":\"MenuButton\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"placement\",\"depth\":2,\"value\":\"Placement\"},{\"slug\":\"detailed-props\",\"depth\":2,\"value\":\"Detailed props\"}]}},{\"key\":\"src/src/Option/readme.mdx\",\"value\":{\"name\":\"Option\",\"route\":\"/fx-option\",\"menu\":\"Components\",\"id\":\"19f570c7e892b9620f7122b2856643fe\",\"filepath\":\"src/src/Option/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Option/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-option-readme\",\"headings\":[{\"slug\":\"option\",\"depth\":1,\"value\":\"Option\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"different-states\",\"depth\":2,\"value\":\"Different states\"},{\"slug\":\"variants\",\"depth\":2,\"value\":\"Variants\"}]}},{\"key\":\"src/src/Placeholder/readme.mdx\",\"value\":{\"name\":\"Placeholder\",\"route\":\"/fx-placeholder\",\"menu\":\"Components\",\"id\":\"d2750da324f36603ba0b1d429c2c2e36\",\"filepath\":\"src/src/Placeholder/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Placeholder/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-placeholder-readme\",\"headings\":[{\"slug\":\"placeholder\",\"depth\":1,\"value\":\"Placeholder\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/src/Select/readme.mdx\",\"value\":{\"name\":\"Select\",\"route\":\"/fx-select\",\"menu\":\"Components\",\"id\":\"62a477eb7237cac4a0ec95ca60d9915d\",\"filepath\":\"src/src/Select/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Select/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-select-readme\",\"headings\":[{\"slug\":\"select\",\"depth\":1,\"value\":\"Select\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"message-and-tone\",\"depth\":2,\"value\":\"Message and tone\"},{\"slug\":\"sizes\",\"depth\":2,\"value\":\"Sizes\"},{\"slug\":\"props\",\"depth\":2,\"value\":\"Props\"}]}},{\"key\":\"src/src/Spinner/readme.mdx\",\"value\":{\"name\":\"Spinner\",\"route\":\"/fx-spinner\",\"menu\":\"Components\",\"id\":\"6f91708cb65454cfb9ada753088c4570\",\"filepath\":\"src/src/Spinner/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Spinner/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-spinner-readme\",\"headings\":[{\"slug\":\"spinner\",\"depth\":1,\"value\":\"Spinner\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"sizes\",\"depth\":2,\"value\":\"Sizes\"},{\"slug\":\"variants\",\"depth\":2,\"value\":\"Variants\"}]}},{\"key\":\"src/src/Stack/readme.mdx\",\"value\":{\"name\":\"Stack\",\"route\":\"/fx-stack\",\"menu\":\"Components\",\"id\":\"9e544c1bf3857869c7ba0f7206c616a3\",\"filepath\":\"src/src/Stack/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Stack/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-stack-readme\",\"headings\":[{\"slug\":\"stack\",\"depth\":1,\"value\":\"Stack\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"space\",\"depth\":2,\"value\":\"Space\"},{\"slug\":\"align\",\"depth\":2,\"value\":\"Align\"}]}},{\"key\":\"src/src/Text/readme.mdx\",\"value\":{\"name\":\"Text\",\"route\":\"/fx-text\",\"menu\":\"Components\",\"id\":\"ed56afae7b81813d50d3ebf02d925edb\",\"filepath\":\"src/src/Text/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/Text/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-text-readme\",\"headings\":[{\"slug\":\"text\",\"depth\":1,\"value\":\"Text\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"variants-and-truncation\",\"depth\":2,\"value\":\"Variants and truncation\"},{\"slug\":\"alignment\",\"depth\":2,\"value\":\"Alignment\"}]}},{\"key\":\"src/src/TextField/readme.mdx\",\"value\":{\"name\":\"TextField\",\"route\":\"/fx-textfield\",\"menu\":\"Components\",\"id\":\"54aaea7ef08b6d92ecb21f9c2ddb0424\",\"filepath\":\"src/src/TextField/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/TextField/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-text-field-readme\",\"headings\":[{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-clear-button\",\"depth\":2,\"value\":\"With clear button\"},{\"slug\":\"be-aware\",\"depth\":4,\"value\":\"Be aware\"},{\"slug\":\"message-and-tone\",\"depth\":2,\"value\":\"Message and tone\"},{\"slug\":\"variants\",\"depth\":2,\"value\":\"Variants\"},{\"slug\":\"sizes\",\"depth\":2,\"value\":\"Sizes\"},{\"slug\":\"with-icon\",\"depth\":2,\"value\":\"With icon\"}]}},{\"key\":\"src/src/TextLink/readme.mdx\",\"value\":{\"name\":\"TextLink\",\"route\":\"/fx-textlink\",\"menu\":\"Components\",\"id\":\"c4d641f5f54f4c1de3d7f3eb819b3adb\",\"filepath\":\"src/src/TextLink/readme.mdx\",\"fullpath\":\"/home/runner/work/edge/edge/src/TextLink/readme.mdx\",\"link\":\"\",\"hidden\":false,\"slug\":\"src-src-text-link-readme\",\"headings\":[{\"slug\":\"link\",\"depth\":1,\"value\":\"Link\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}}],\"props\":[{\"key\":\"src/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"label\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"label\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"message\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"message\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onChange\",\"required\":false,\"type\":{\"name\":\"((event: ChangeEvent<HTMLInputElement>) => void) | undefined\"}},\"disabled\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoFocus\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoFocus\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoComplete\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoComplete\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"type\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"type\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"name\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"name\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"Left side icon\",\"name\":\"icon\",\"required\":false,\"type\":{\"name\":\"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined\"}},\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the input\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"l\\\" | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"Tone of the input field\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Visual mode of the field\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"underlined\\\" | \\\"borderless\\\" | undefined\"}},\"inputRef\":{\"defaultValue\":null,\"description\":\"React Ref to the input element\",\"name\":\"inputRef\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | (string & ((instance: HTMLInputElement | null) => void)) | (string & RefObject<HTMLInputElement>) | (((instance: HTMLInputElement | null) => void) & RefObject<...>) | (RefObject<...> & ((instance: HTMLInputElement | null) => void)) | null ...\"}},\"inputProps\":{\"defaultValue\":null,\"description\":\"All the props that needs to be passed to the input element\",\"name\":\"inputProps\",\"required\":false,\"type\":{\"name\":\"InputProps | undefined\"}},\"onClear\":{\"defaultValue\":null,\"description\":\"When function is provided it renders clear button which clears the input\",\"name\":\"onClear\",\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}}}},{\"description\":\"\",\"displayName\":\"src\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLAnchorElement | null) => void) | RefObject<HTMLAnchorElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 158 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 158 more ... | undefined\"}}}}]},{\"key\":\"src/@utils/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"useCombinedRefs\",\"methods\":[],\"props\":{}},{\"description\":\"\",\"displayName\":\"joinRefs\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Box/Box.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Box\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Box/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Box\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Button/Button.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":\"m\"},\"description\":\"The size of the button\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Button variant\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"transparent\\\" | \\\"flat\\\" | \\\"brand\\\" | \\\"critical\\\" | undefined\"}}}}]},{\"key\":\"src/Button/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"The size of the button\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Button variant\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"transparent\\\" | \\\"flat\\\" | \\\"brand\\\" | \\\"critical\\\" | undefined\"}}}}]},{\"key\":\"src/Card/Card.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"elevation\":{\"defaultValue\":{\"value\":1},\"description\":\"\",\"name\":\"elevation\",\"required\":false,\"type\":{\"name\":\"0 | 2 | 1\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Card/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"elevation\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"elevation\",\"required\":true,\"type\":{\"name\":\"0 | 2 | 1\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Checkbox/Checkbox.styled.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"CheckMark\",\"methods\":[],\"props\":{\"tone\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"checked\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"checked\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"InlineWrapper\",\"methods\":[],\"props\":{\"space\":{\"defaultValue\":null,\"description\":\"Space between items\\nSpace between items\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | undefined\"}},\"nowrap\":{\"defaultValue\":{\"value\":\"false\\nfalse\"},\"description\":\"Disable wrapping elements to new line\\nDisable wrapping elements to new line\",\"name\":\"nowrap\",\"required\":false,\"type\":{\"name\":\"boolean\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"checked\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"checked\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\\n'left'\"},\"description\":\"Horizontal alignment\\nHorizontal alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}},\"alignY\":{\"defaultValue\":{\"value\":\"'center'\\n'center'\"},\"description\":\"Vertical alignment\\nVertical alignment\",\"name\":\"alignY\",\"required\":false,\"type\":{\"name\":\"\\\"center\\\" | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}}}},{\"description\":\"\",\"displayName\":\"CheckBoxWrapper\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"Input\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Checkbox/Checkbox.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"label\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"label\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"name\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"name\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"checked\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"checked\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"message\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"message\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"inputRef\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"inputRef\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | (string & ((instance: HTMLInputElement | null) => void)) | (string & RefObject<HTMLInputElement>) | (((instance: HTMLInputElement | null) => void) & RefObject<...>) | (RefObject<...> & ((instance: HTMLInputElement | null) => void)) | null ...\"}},\"inputProps\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"inputProps\",\"required\":false,\"type\":{\"name\":\"InputProps | undefined\"}}}}]},{\"key\":\"src/Checkbox/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"label\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"label\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"name\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"name\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"checked\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"checked\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"message\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"message\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"inputRef\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"inputRef\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | (string & ((instance: HTMLInputElement | null) => void)) | (string & RefObject<HTMLInputElement>) | (((instance: HTMLInputElement | null) => void) & RefObject<...>) | (RefObject<...> & ((instance: HTMLInputElement | null) => void)) | null ...\"}},\"inputProps\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"inputProps\",\"required\":false,\"type\":{\"name\":\"InputProps | undefined\"}}}}]},{\"key\":\"src/Column/Column.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Column\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"width\":{\"defaultValue\":{\"value\":\"fluid\"},\"description\":\"Width of the column\",\"name\":\"width\",\"required\":false,\"type\":{\"name\":\"\\\"content\\\" | \\\"fluid\\\" | \\\"1/2\\\" | \\\"1/3\\\" | \\\"2/3\\\" | \\\"1/4\\\" | \\\"3/4\\\" | \\\"1/5\\\" | \\\"2/5\\\" | \\\"3/5\\\" | \\\"4/5\\\" | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Column/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Column\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"width\":{\"defaultValue\":{\"value\":\"fluid\"},\"description\":\"Width of the column\",\"name\":\"width\",\"required\":false,\"type\":{\"name\":\"\\\"content\\\" | \\\"fluid\\\" | \\\"1/2\\\" | \\\"1/3\\\" | \\\"2/3\\\" | \\\"1/4\\\" | \\\"3/4\\\" | \\\"1/5\\\" | \\\"2/5\\\" | \\\"3/5\\\" | \\\"4/5\\\" | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Columns/Columns.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"space\":{\"defaultValue\":null,\"description\":\"Space between columns\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\"},\"description\":\"Alignment of columns\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\" | \\\"spread\\\" | \\\"apart\\\" | undefined\"}},\"alignY\":{\"defaultValue\":null,\"description\":\"Vertical alignment\",\"name\":\"alignY\",\"required\":false,\"type\":{\"name\":\"\\\"bottom\\\" | \\\"top\\\" | \\\"center\\\" | undefined\"}}}}]},{\"key\":\"src/Columns/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"space\":{\"defaultValue\":null,\"description\":\"Space between columns\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\"},\"description\":\"Alignment of columns\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\" | \\\"spread\\\" | \\\"apart\\\" | undefined\"}},\"alignY\":{\"defaultValue\":null,\"description\":\"Vertical alignment\",\"name\":\"alignY\",\"required\":false,\"type\":{\"name\":\"\\\"bottom\\\" | \\\"top\\\" | \\\"center\\\" | undefined\"}}}}]},{\"key\":\"src/ContentBlock/ContentBlock.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ContentBlock\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"wide\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"wide\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/ContentBlock/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ContentBlock\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"wide\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"wide\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Dropdown/Dropdown.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Dropdown\",\"methods\":[],\"props\":{\"placement\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placement\",\"required\":false,\"type\":{\"name\":\"\\\"auto\\\" | \\\"bottom\\\" | \\\"top\\\" | \\\"right\\\" | \\\"left\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | undefined\"}},\"downshift\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"downshift\",\"required\":true,\"type\":{\"name\":\"UseSelectReturnValue<ReactComponentElement<ForwardRefExoticComponent<Pick<Props, \\\"slot\\\" | \\\"style\\\" | \\\"title\\\" | \\\"theme\\\" | \\\"key\\\" | \\\"defaultChecked\\\" | \\\"defaultValue\\\" | \\\"suppressContentEditableWarning\\\" | \\\"suppressHydrationWarning\\\" | \\\"accessKey\\\" | ... 249 more ... | \\\"forwardedAs\\\"> & RefAttributes<...>>, Pick<...>>>\"}}}}]},{\"key\":\"src/Dropdown/Popover.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Popover\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Dropdown/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Dropdown\",\"methods\":[],\"props\":{\"placement\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placement\",\"required\":false,\"type\":{\"name\":\"\\\"auto\\\" | \\\"bottom\\\" | \\\"top\\\" | \\\"right\\\" | \\\"left\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | undefined\"}},\"downshift\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"downshift\",\"required\":true,\"type\":{\"name\":\"UseSelectReturnValue<ReactComponentElement<ForwardRefExoticComponent<Pick<Props, \\\"slot\\\" | \\\"style\\\" | \\\"title\\\" | \\\"theme\\\" | \\\"key\\\" | \\\"defaultChecked\\\" | \\\"defaultValue\\\" | \\\"suppressContentEditableWarning\\\" | \\\"suppressHydrationWarning\\\" | \\\"accessKey\\\" | ... 249 more ... | \\\"forwardedAs\\\"> & RefAttributes<...>>, Pick<...>>>\"}}}}]},{\"key\":\"src/Edge/Edge.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Edge\",\"methods\":[],\"props\":{\"mode\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"mode\",\"required\":false,\"type\":{\"name\":\"\\\"light\\\" | \\\"dark\\\" | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"Partial<{ breakpoints: string[]; colors: { gray: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; 700: string; 800: string; 900: string; }; brand: { 100: string; 200: string; 300: string; ... 5 more ...; 900: string; }; ... 8 more ...; surface: { ...; }; }; shadows: { ...; }; space: Sp...\"}}}}]},{\"key\":\"src/Edge/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Edge\",\"methods\":[],\"props\":{\"mode\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"mode\",\"required\":false,\"type\":{\"name\":\"\\\"light\\\" | \\\"dark\\\" | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"Partial<{ breakpoints: string[]; colors: { gray: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; 700: string; 800: string; 900: string; }; brand: { 100: string; 200: string; 300: string; ... 5 more ...; 900: string; }; ... 8 more ...; surface: { ...; }; }; shadows: { ...; }; space: Sp...\"}}}}]},{\"key\":\"src/Field/ClearButton.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ClearButton\",\"methods\":[],\"props\":{\"shown\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"shown\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"required\":true,\"type\":{\"name\":\"(e: MouseEvent<HTMLButtonElement, MouseEvent>) => void\"}},\"size\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"size\",\"required\":true,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"l\\\"\"}},\"disabled\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/Field/Field.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Field/FieldInput.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"placeholder\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placeholder\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"label\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"label\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"message\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"message\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onChange\",\"required\":false,\"type\":{\"name\":\"((event: ChangeEvent<HTMLInputElement>) => void) | undefined\"}},\"disabled\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoFocus\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoFocus\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoComplete\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoComplete\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"type\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"type\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"name\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"name\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"Left side icon\",\"name\":\"icon\",\"required\":false,\"type\":{\"name\":\"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined\"}},\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the input\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"l\\\" | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"Tone of the input field\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Visual mode of the field\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"underlined\\\" | \\\"borderless\\\" | undefined\"}},\"inputRef\":{\"defaultValue\":null,\"description\":\"React Ref to the input element\",\"name\":\"inputRef\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | (string & ((instance: HTMLInputElement | null) => void)) | (string & RefObject<HTMLInputElement>) | (((instance: HTMLInputElement | null) => void) & RefObject<...>) | (RefObject<...> & ((instance: HTMLInputElement | null) => void)) | null ...\"}},\"inputProps\":{\"defaultValue\":null,\"description\":\"All the props that needs to be passed to the input element\",\"name\":\"inputProps\",\"required\":false,\"type\":{\"name\":\"InputProps | undefined\"}},\"onClear\":{\"defaultValue\":null,\"description\":\"When function is provided it renders clear button which clears the input\",\"name\":\"onClear\",\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}}}}]},{\"key\":\"src/Field/LeftIcon.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"LeftIcon\",\"methods\":[],\"props\":{\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"required\":true,\"type\":{\"name\":\"any\"}},\"size\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"any\"}}}}]},{\"key\":\"src/Field/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/FieldLabel/FieldLabel.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/FieldLabel/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/FieldMessage/FieldMessage.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"id\":{\"defaultValue\":null,\"description\":\"Field the message describes\",\"name\":\"id\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"disabled\":{\"defaultValue\":{\"value\":\"false\"},\"description\":\"Whether described by the message field is disabled\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"Tone of the message\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}}}}]},{\"key\":\"src/FieldMessage/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"id\":{\"defaultValue\":null,\"description\":\"Field the message describes\",\"name\":\"id\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"disabled\":{\"defaultValue\":{\"value\":\"false\"},\"description\":\"Whether described by the message field is disabled\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"Tone of the message\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}}}}]},{\"key\":\"src/Heading/Heading.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Heading\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLHeadingElement | null) => void) | RefObject<HTMLHeadingElement> | null | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Specifies font-weight: default bold or lighter\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"light\\\" | undefined\"}},\"as\":{\"defaultValue\":{\"value\":\"h1\"},\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\\nSpecifies level of the Heading\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Heading/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Heading\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLHeadingElement | null) => void) | RefObject<HTMLHeadingElement> | null | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Specifies font-weight: default bold or lighter\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"light\\\" | undefined\"}},\"as\":{\"defaultValue\":{\"value\":\"'h1'\"},\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\\nSpecifies level of the Heading\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Icon/Icon.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"size\":{\"defaultValue\":{\"value\":\"m\"},\"description\":\"Size of the icon\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"Size\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Material Design icon variant\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"outlined\\\" | \\\"round\\\" | \\\"two-tone\\\" | undefined\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"Name of the icon\",\"name\":\"icon\",\"required\":true,\"type\":{\"name\":\"string\"}}}}]},{\"key\":\"src/Icon/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the icon\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"Size\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Material Design icon variant\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"outlined\\\" | \\\"round\\\" | \\\"two-tone\\\" | undefined\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"Name of the icon\",\"name\":\"icon\",\"required\":true,\"type\":{\"name\":\"string\"}}}}]},{\"key\":\"src/IconButton/IconButton.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"IconButton\",\"methods\":[],\"props\":{\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"required\":true,\"type\":{\"name\":\"string\"}},\"size\":{\"defaultValue\":{\"value\":\"m\"},\"description\":\"\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"Size\"}},\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/IconButton/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"IconButton\",\"methods\":[],\"props\":{\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"required\":true,\"type\":{\"name\":\"string\"}},\"size\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"size\",\"required\":true,\"type\":{\"name\":\"Size\"}},\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Inline/Inline.styled.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Wrapper\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"space\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"Flex\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"space\":{\"defaultValue\":null,\"description\":\"Space between items\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"nowrap\":{\"defaultValue\":{\"value\":\"false\"},\"description\":\"Disable wrapping elements to new line\",\"name\":\"nowrap\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\"},\"description\":\"Horizontal alignment\",\"name\":\"align\",\"required\":true,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}},\"alignY\":{\"defaultValue\":{\"value\":\"'center'\"},\"description\":\"Vertical alignment\",\"name\":\"alignY\",\"required\":true,\"type\":{\"name\":\"\\\"bottom\\\" | \\\"top\\\" | \\\"center\\\"\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"Child\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}},{\"description\":\"\",\"displayName\":\"FlexNew\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"space\":{\"defaultValue\":null,\"description\":\"Space between items\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"nowrap\":{\"defaultValue\":{\"value\":\"false\"},\"description\":\"Disable wrapping elements to new line\",\"name\":\"nowrap\",\"required\":true,\"type\":{\"name\":\"boolean\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\"},\"description\":\"Horizontal alignment\",\"name\":\"align\",\"required\":true,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}},\"alignY\":{\"defaultValue\":{\"value\":\"'center'\"},\"description\":\"Vertical alignment\",\"name\":\"alignY\",\"required\":true,\"type\":{\"name\":\"\\\"bottom\\\" | \\\"top\\\" | \\\"center\\\"\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Inline/Inline.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"space\":{\"defaultValue\":null,\"description\":\"Space between items\\nSpace between items\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"nowrap\":{\"defaultValue\":{\"value\":\"false\\nfalse\"},\"description\":\"Disable wrapping elements to new line\\nDisable wrapping elements to new line\",\"name\":\"nowrap\",\"required\":false,\"type\":{\"name\":\"boolean\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\\n'left'\"},\"description\":\"Horizontal alignment\\nHorizontal alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}},\"alignY\":{\"defaultValue\":{\"value\":\"'center'\\n'center'\"},\"description\":\"Vertical alignment\\nVertical alignment\",\"name\":\"alignY\",\"required\":false,\"type\":{\"name\":\"\\\"bottom\\\" | \\\"top\\\" | \\\"center\\\"\"}}}}]},{\"key\":\"src/Inline/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"space\":{\"defaultValue\":null,\"description\":\"Space between items\\nSpace between items\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"nowrap\":{\"defaultValue\":{\"value\":\"false\\nfalse\"},\"description\":\"Disable wrapping elements to new line\\nDisable wrapping elements to new line\",\"name\":\"nowrap\",\"required\":false,\"type\":{\"name\":\"boolean\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"align\":{\"defaultValue\":{\"value\":\"'left'\\n'left'\"},\"description\":\"Horizontal alignment\\nHorizontal alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}},\"alignY\":{\"defaultValue\":{\"value\":\"'center'\\n'center'\"},\"description\":\"Vertical alignment\\nVertical alignment\",\"name\":\"alignY\",\"required\":false,\"type\":{\"name\":\"\\\"bottom\\\" | \\\"top\\\" | \\\"center\\\"\"}}}}]},{\"key\":\"src/ListBox/ListBox.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/ListBox/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Logo/Logo.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the logo\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"variant\":{\"defaultValue\":{\"value\":\"'brand'\"},\"description\":\"Main color scheme of the Logo\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"brand\\\" | \\\"light\\\" | \\\"dark\\\" | undefined\"}}}}]},{\"key\":\"src/Logo/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the logo\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"variant\":{\"defaultValue\":{\"value\":\"'brand'\"},\"description\":\"Main color scheme of the Logo\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"brand\\\" | \\\"light\\\" | \\\"dark\\\" | undefined\"}}}}]},{\"key\":\"src/MenuButton/MenuButton.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"MenuButton\",\"methods\":[],\"props\":{\"placement\":{\"defaultValue\":{\"value\":\"'bottom-start'\"},\"description\":\"Placement according to [popper reference](https://popper.js.org/docs/v2/constructors/#options)\",\"name\":\"placement\",\"required\":false,\"type\":{\"name\":\"\\\"auto\\\" | \\\"bottom\\\" | \\\"top\\\" | \\\"right\\\" | \\\"left\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | undefined\"}}}}]},{\"key\":\"src/MenuButton/ToggleButton.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ToggleButton\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/MenuButton/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"MenuButton\",\"methods\":[],\"props\":{\"placement\":{\"defaultValue\":{\"value\":\"'bottom-start'\"},\"description\":\"Placement according to [popper reference](https://popper.js.org/docs/v2/constructors/#options)\",\"name\":\"placement\",\"required\":false,\"type\":{\"name\":\"\\\"auto\\\" | \\\"bottom\\\" | \\\"top\\\" | \\\"right\\\" | \\\"left\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | undefined\"}}}}]},{\"key\":\"src/Option/Option.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"bordered\\\" | undefined\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Option/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"bordered\\\" | undefined\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Placeholder/Placeholder.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Placeholder/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Select/Select.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Select\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Select/SelectInput.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"SelectInput\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Select/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Select\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Spinner/Spinner.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the spinner\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"variant\":{\"defaultValue\":{\"value\":\"'dark'\"},\"description\":\"Color of the spinner\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"brand\\\" | \\\"light\\\" | \\\"dark\\\" | undefined\"}}}}]},{\"key\":\"src/Spinner/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the spinner\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"variant\":{\"defaultValue\":{\"value\":\"'dark'\"},\"description\":\"Color of the spinner\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"brand\\\" | \\\"light\\\" | \\\"dark\\\" | undefined\"}}}}]},{\"key\":\"src/Stack/Stack.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"space\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Space between elements\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"align\":{\"defaultValue\":null,\"description\":\"Children alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}}}}]},{\"key\":\"src/Stack/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"space\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Space between elements\",\"name\":\"space\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"xs\\\" | \\\"l\\\" | \\\"xl\\\" | undefined\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"align\":{\"defaultValue\":null,\"description\":\"Children alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\"\"}}}}]},{\"key\":\"src/Text/Text.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"Text\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Text variant\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"light\\\" | undefined\"}},\"align\":{\"defaultValue\":null,\"description\":\"Text alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\" | undefined\"}},\"maxLines\":{\"defaultValue\":null,\"description\":\"Truncate text after maximum lines reached\",\"name\":\"maxLines\",\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Text/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"Text\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Text variant\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"light\\\" | undefined\"}},\"align\":{\"defaultValue\":null,\"description\":\"Text alignment\",\"name\":\"align\",\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"left\\\" | \\\"center\\\" | undefined\"}},\"maxLines\":{\"defaultValue\":null,\"description\":\"Truncate text after maximum lines reached\",\"name\":\"maxLines\",\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/TextField/TextField.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"placeholder\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placeholder\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"label\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"label\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"message\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"message\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onChange\",\"required\":false,\"type\":{\"name\":\"((event: ChangeEvent<HTMLInputElement>) => void) | undefined\"}},\"disabled\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoFocus\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoFocus\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoComplete\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoComplete\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"type\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"type\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"name\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"name\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"Left side icon\",\"name\":\"icon\",\"required\":false,\"type\":{\"name\":\"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined\"}},\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the input\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"l\\\" | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"Tone of the input field\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Visual mode of the field\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"underlined\\\" | \\\"borderless\\\" | undefined\"}},\"inputRef\":{\"defaultValue\":null,\"description\":\"React Ref to the input element\",\"name\":\"inputRef\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | (string & ((instance: HTMLInputElement | null) => void)) | (string & RefObject<HTMLInputElement>) | (((instance: HTMLInputElement | null) => void) & RefObject<...>) | (RefObject<...> & ((instance: HTMLInputElement | null) => void)) | null ...\"}},\"inputProps\":{\"defaultValue\":null,\"description\":\"All the props that needs to be passed to the input element\",\"name\":\"inputProps\",\"required\":false,\"type\":{\"name\":\"InputProps | undefined\"}},\"onClear\":{\"defaultValue\":null,\"description\":\"When function is provided it renders clear button which clears the input\",\"name\":\"onClear\",\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}}}}]},{\"key\":\"src/TextField/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"ForwardRefExoticComponent\",\"methods\":[],\"props\":{\"placeholder\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placeholder\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"label\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"label\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"message\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"message\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | number | string[] | undefined\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onChange\",\"required\":false,\"type\":{\"name\":\"((event: ChangeEvent<HTMLInputElement>) => void) | undefined\"}},\"disabled\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"disabled\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoFocus\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoFocus\",\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"autoComplete\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"autoComplete\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"type\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"type\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"name\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"name\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"Left side icon\",\"name\":\"icon\",\"required\":false,\"type\":{\"name\":\"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined\"}},\"size\":{\"defaultValue\":{\"value\":\"'m'\"},\"description\":\"Size of the input\",\"name\":\"size\",\"required\":false,\"type\":{\"name\":\"\\\"s\\\" | \\\"m\\\" | \\\"l\\\" | undefined\"}},\"tone\":{\"defaultValue\":null,\"description\":\"Tone of the input field\",\"name\":\"tone\",\"required\":false,\"type\":{\"name\":\"\\\"critical\\\" | \\\"positive\\\" | undefined\"}},\"variant\":{\"defaultValue\":null,\"description\":\"Visual mode of the field\",\"name\":\"variant\",\"required\":false,\"type\":{\"name\":\"\\\"underlined\\\" | \\\"borderless\\\" | undefined\"}},\"inputRef\":{\"defaultValue\":null,\"description\":\"React Ref to the input element\",\"name\":\"inputRef\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | (string & ((instance: HTMLInputElement | null) => void)) | (string & RefObject<HTMLInputElement>) | (((instance: HTMLInputElement | null) => void) & RefObject<...>) | (RefObject<...> & ((instance: HTMLInputElement | null) => void)) | null ...\"}},\"inputProps\":{\"defaultValue\":null,\"description\":\"All the props that needs to be passed to the input element\",\"name\":\"inputProps\",\"required\":false,\"type\":{\"name\":\"InputProps | undefined\"}},\"onClear\":{\"defaultValue\":null,\"description\":\"When function is provided it renders clear button which clears the input\",\"name\":\"onClear\",\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}}}}]},{\"key\":\"src/TextLink/TextLink.tsx\",\"value\":[{\"description\":\"\",\"displayName\":\"TextLink\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLAnchorElement | null) => void) | RefObject<HTMLAnchorElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/TextLink/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"TextLink\",\"methods\":[],\"props\":{\"ref\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"ref\",\"required\":false,\"type\":{\"name\":\"((instance: HTMLAnchorElement | null) => void) | RefObject<HTMLAnchorElement> | null | undefined\"}},\"theme\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"theme\",\"required\":false,\"type\":{\"name\":\"any\"}},\"as\":{\"defaultValue\":null,\"description\":\"Typing Note: prefer using .withComponent for now as it is actually type-safe.\\n\\nString types need to be cast to themselves to become literal types (as={'a' as 'a'}).\",\"name\":\"as\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}},\"forwardedAs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"forwardedAs\",\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"map\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 157 more ... | undefined\"}}}}]},{\"key\":\"src/Dropdown/utils/index.ts\",\"value\":[{\"description\":\"\",\"displayName\":\"useSelect\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onSelect\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onSelect\",\"required\":false,\"type\":{\"name\":\"((v: string) => void) | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"options\",\"required\":true,\"type\":{\"name\":\"ReactComponentElement<ForwardRefExoticComponent<Pick<Props, \\\"slot\\\" | \\\"style\\\" | \\\"title\\\" | \\\"theme\\\" | \\\"key\\\" | \\\"defaultChecked\\\" | \\\"defaultValue\\\" | \\\"suppressContentEditableWarning\\\" | \\\"suppressHydrationWarning\\\" | \\\"accessKey\\\" | ... 249 more ... | \\\"forwardedAs\\\"> & RefAttributes<...>>, Pick<...>> | ReactComponentElement<...>[]\"}}}},{\"description\":\"useful when you need latest state in async manner (event handlers)\",\"displayName\":\"useDownshiftStateRef\",\"methods\":[],\"props\":{}},{\"description\":\"\",\"displayName\":\"optionToString\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/Edge/theme/index.ts\",\"value\":[]}]}"}}}